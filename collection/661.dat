function DigitPowerSum(N: Integer; const Base: Byte; const Exponent: Byte):
  Int64;
var
  SignOfN: Math.TValueSign;
  Digit: Integer;
  PowerDigit: Int64;
begin
  if Base < 2 then
    raise SysUtils.EArgumentException.Create(
      'Base must be in the range 2..255'
    );
  if N = 0 then
    Exit(0);
  SignOfN := Math.Sign(N);
  N := Abs(N);
  Result := 0;
  repeat
    Digit := N mod Base;
    PowerDigit := PowNZN(Digit, Exponent);
    if High(Int64) - PowerDigit < Abs(Result) then
      raise SysUtils.EOverflow.Create('Overflow calculating digit power sum');
    Result := Result + PowerDigit;
    N := N div Base;
  until N = 0;
  if SignOfN = Math.NegativeValue then
    Result := -1 * Result;
end;