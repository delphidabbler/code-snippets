# DelphiDabbler Code Snippets Database v2
#
# Date and Time category file
#
# This file is licensed under the MIT license, copyright © 2024 Peter Johnson,
# https://gravatar.com/delphidabbler

[AddDays]
DescEx="<p>Adds the number of days, <var>Days</var>, to the given date, <var>DateTime</var> and returns the result.</p><p>To subtract days, pass a negative value for <var>Days</var>.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
SeeAlso=DiffDays
Snip=548.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[AdjustedTimeZoneBias]
DescEx="<p>Gets the bias of the local time zone relative to UTC (GMT), adjusted for daylight saving or standard time as appropriate.</p>"
Units=SysUtils,Windows
SeeAlso=TimeZoneBias
Snip=269.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateDay]
DescEx="<p>Extracts the day of the month from a specified date.</p>"
Extra="<p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils
SeeAlso=DateMonth,DateYear,DayOfYear
TestInfo=advanced
AdvancedTest.Level=unit-tests
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Date"
Snip=224.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateMonth]
DescEx="<p>Extracts the month from a specified date.</p>"
Extra="<p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils
SeeAlso=DateDay,DateYear,DaysInMonth,DateMonthEnd,DateMonthStart
Snip=225.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateMonthEnd]
DescEx="<p>Returns the last day of the month containing the given date.</p>"
Extra="<p>The date returned is midnight at the beginning of the last day of the month.</p>"
Units=SysUtils
SeeAlso=DateMonth,DateMonthStart,DaysInMonth
Depends=DaysInMonth
TestInfo=advanced
AdvancedTest.Level=unit-tests
AdvancedTest.URL="github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Date"
Snip=441.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateMonthStart]
DescEx="<p>Returns the first day of the month containing the given date.</p>"
Extra="<p>The date returned is midnight at the beginning of the first day of the month.</p><p>Slightly modified from code contributed by Bill Miller.</p>"
Units="SysUtils"
SeeAlso=DateMonth,DateMonthEnd
TestInfo=advanced
AdvancedTest.Level=unit-tests
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Date"
Snip=442.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateQuarter]
DescEx="<p>Returns the number of the quarter containing a given date.</p>"
Extra="<p>Based on code contributed by Homolibere.</p>"
Units=SysUtils
SeeAlso=DateQuarterStart,DateQuarterEnd
TestInfo=advanced
AdvancedTest.Level=unit-tests
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Date"
Snip=413.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateQuarterEnd]
DescEx="<p>Gets the date of the last day of the quarter containing a given date.</p>"
Extra="<p>Modified from code contributed by Homolibere.</p>"
Units=SysUtils
SeeAlso=DateQuarter,DateQuarterStart
TestInfo=advanced
AdvancedTest.Level=unit-tests
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Date"
Snip=414.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateQuarterStart]
DescEx="<p>Gets the date of the first day of the quarter containing a given date.</p>"
Extra="<p>Modified from code contributed by Homolibere.</p>"
Units=SysUtils
SeeAlso=DateQuarter,DateQuarterEnd
TestInfo=advanced
AdvancedTest.Level=unit-tests
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Date"
Snip=415.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateTimeToUnixDate]
DescEx="<p>Converts the given Delphi <var>TDateTime</var> value to a Unix date.</p><p>Does not check for range errors.</p>"
SeeAlso=UnixDateToDateTime
Snip=155.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateTimeToWinFileTime]
DescEx="<p>Converts given <var>TDateTime</var> value <var>DT</var> into a Windows <var>FILETIME</var> structure and returns it.</p><p>Raises an exception if <var>DT</var> is not valid or can't be converted.</p>"
Units=Windows,SysUtils
SeeAlso=GMTToLocalTime,WinFileTimeToDateTime
Snip=094.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateYear]
DescEx="<p>Extracts the year from a specified date.</p>"
Extra="<p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils
SeeAlso=DateDay,DateMonth,IsLeapYear,DateYearStart,DateYearEnd
Snip=226.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateYearEnd]
DescEx="<p>Returns the last day of the year containing the specified date.</p>"
Extra="<p>The date returned is midnight at the beginning of the last day of the year.</p><p>Renamed routine from Bill Miller's snippets collection.</p>"
Units=SysUtils
SeeAlso=DateYear,DateYearStart
TestInfo=advanced
AdvancedTest.Level=unit-tests
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Date"
Snip=443.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DateYearStart]
DescEx="<p>Returns the first day of the year containing the specified date.</p>"
Extra="<p>The date returned is midnight at the beginning of the first day of the year.</p><p>Renamed from routine contributed by Bill Miller.</p>"
Units=SysUtils
SeeAlso=DateYear,DateYearEnd
TestInfo=advanced
AdvancedTest.Level=unit-tests
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Date"
Snip=444.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DayOfYear]
DescEx="<p>Returns the day of the year for the given date.</p>"
Extra="<p>From Bill Miller's snippets collection.</p>"
Depends=DateYearStart
SeeAlso=DateDay
Snip=550.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DaysInMonth]
DescEx="<p>Gets number of days in month specified by a given date. Allows for leap days.</p>"
Units=SysUtils
Depends=DateMonth,IsLeapYear
SeeAlso=DateDay,IsLeapYear
Snip=228.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DiffDays]
DescEx="<p>Returns the whole number of days separating two given dates.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
SeeAlso=AddDays
Snip=549.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[Is24HourTimeFormat]
DescEx="<p>Checks if the 24 hour time format is being used by the current thread.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
Units=SysUtils,Windows
Snip=229.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[IsDaylightSaving]
DescEx="<p>Checks if current local time is daylight saving time.</p>"
Extra="<p>Raises exception if daylight saving information cannot be obtained from operating system.</p>"
Units=SysUtils,Windows
Snip=230.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsFriday]
DescEx="<p>Checks if the given date is a Friday.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
SeeAlso=IsMonday,IsTuesday,IsWednesday,IsThursday,IsSaturday,IsSunday,IsWeekday,IsWeekend
Units=SysUtils
Snip=539.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsLeapYear]
DescEx="<p>Checks if a specified date falls in a leap year.</p>"
Extra="<p>Adapted from code contributed by Bill Miller.</p>"
Depends=DateYear
SeeAlso=DateYear,DaysInMonth
Snip=227.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsMonday]
DescEx="<p>Checks if the given date is a Monday.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
SeeAlso=IsTuesday,IsWednesday,IsThursday,IsFriday,IsSaturday,IsSunday,IsWeekday,IsWeekend
Units=SysUtils
Snip=540.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsSaturday]
DescEx="<p>Checks if the given date is a Saturday.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
SeeAlso=IsMonday,IsTuesday,IsWednesday,IsThursday,IsFriday,IsSunday,IsWeekday,IsWeekend
Units=SysUtils
Snip=541.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsSunday]
DescEx="<p>Checks if the given date is a Sunday.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
SeeAlso=IsMonday,IsTuesday,IsWednesday,IsThursday,IsFriday,IsSaturday,IsWeekday,IsWeekend
Units=SysUtils
Snip=542.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsThursday]
DescEx="<p>Checks if the given date is a Thursday.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
SeeAlso=IsMonday,IsTuesday,IsWednesday,IsFriday,IsSaturday,IsSunday,IsWeekday,IsWeekend
Units=SysUtils
Snip=543.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsTuesday]
DescEx="<p>Checks if the given date is a Tuesday.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
SeeAlso=IsMonday,IsWednesday,IsThursday,IsFriday,IsSaturday,IsSunday,IsWeekday,IsWeekend
Units=SysUtils
Snip=544.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsValidDate]
DescEx="<p>Checks if a string represents a valid date in the current locale.</p>"
Extra="<p>Inspired by code from Bill Miller's snippets collection.</p>"
Units=SysUtils
SeeAlso=IsValidTime
Snip=355.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsValidTime]
DescEx="<p>Checks if a string represents a valid time in the current locale.</p>"
Extra="<p>Inspired by code from Bill Miller's snippets collection.</p>"
Units=SysUtils
SeeAlso=IsValidDate
Snip=356.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsWednesday]
DescEx="<p>Checks if the given date is a Wednesday.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
SeeAlso=IsMonday,IsTuesday,IsThursday,IsFriday,IsSaturday,IsSunday,IsWeekday,IsWeekend
Units=SysUtils
Snip=545.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsWeekday]
DescEx="<p>Checks if the given date is a weekday.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
SeeAlso=IsMonday,IsTuesday,IsWednesday,IsThursday,IsFriday,IsSaturday,IsSunday,IsWeekend
Units=SysUtils
Snip=546.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsWeekend]
DescEx="<p>Checks if the given date is a weekend.</p>"
Extra="<p>Contributed by Bill Miller.</p>"
SeeAlso=IsMonday,IsTuesday,IsWednesday,IsThursday,IsFriday,IsSaturday,IsSunday,IsWeekday
Units=SysUtils
Snip=547.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[MSecToDateTime]
DescEx="<p>Converts the given number of milliseconds to a <var>TDateTime</var> value.</p>"
Units=SysUtils
Snip=458.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SQLDate]
DescEx="<p>Formats a date in SQL format.</p>"
Units=SysUtils
SeeAlso=SQLDateToDateTime
TestInfo=advanced
AdvancedTest.Level=unit-tests
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Date"
Snip=237.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SQLDateToDateTime]
DescEx="<p>Converts a date in SQL format into a <var>TDateTime</var>.</p>"
Extra="<p>Handles only the date component. Any time component is ignored.</p>"
Units=SysUtils
SeeAlso=SQLDate
TestInfo=advanced
AdvancedTest.Level=unit-tests
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Date"
Snip=412.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TimeHour]
DescEx="<p>Extracts the hour from a specified time.</p>"
Extra="<p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils
SeeAlso=TimeMin,TimeSec
Snip=175.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TimeMin]
DescEx="<p>Extracts the minute from a specified time.</p>"
Extra="<p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils
SeeAlso=TimeHour,TimeSec
Snip=176.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TimeSec]
DescEx="<p>Extracts the second from a specified time.</p>"
Extra="<p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils
SeeAlso=TimeHour,TimeMin
Snip=177.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TimeZoneBias]
DescEx="<p>Gets the bias of the local time zone relative to UTC (GMT).</p><p>Does not adjust for daylight saving time.</p>"
Extra="<p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils,Windows
SeeAlso=AdjustedTimeZoneBias,TimeZoneName
Snip=270.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TimeZoneName]
DescEx="<p>Returns a string containing the local time zone name or '' if the name is unknown.</p>"
Extra="<p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils,Windows
SeeAlso=TimeZoneBias
Snip=271.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[UnixDateToDateTime]
DescEx="<p>Converts a Unix date to a Delphi <var>TDateTime</var>.</p><p>Does not check for range errors.</p>"
SeeAlso=DateTimeToUnixDate
Snip=156.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[WinFileTimeToDateTime]
DescEx="<p>Converts the given Windows <var>FILETIME</var> structure <var>FT</var> into a Delphi <var>TDateTime</var> value and returns it.</p><p>Raises an exception if <var>FT</var> is not valid or can't be converted.</p>"
Units=Windows,SysUtils
SeeAlso=DateTimeToWinFileTime,WinFileTimeToDOSFileTime,WinFileTimeToStr
Snip=002.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[WinFileTimeToDOSFileTime]
DescEx="<p>Converts the given Windows <var>FILETIME</var> structure <var>FT</var> to a DOS file time and returns it.</p><p>Raises an exception if <var>FT</var> is not a valid value or can't be converted.</p>"
Units=Windows,SysUtils
SeeAlso=WinFileTimeToDateTime,WinFileTimeToStr
Snip=001.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[WinFileTimeToStr]
DescEx="<p>Converts the given Windows <var>FILETIME</var> structure <var>FT</var> to a string.</p><p>Raises an exception if <var>FT</var> is not a valid value.</p>"
Units=Windows,SysUtils
Depends=WinFileTimeToDateTime
SeeAlso=WinFileTimeToDateTime,WinFileTimeToDOSFileTime
Snip=003.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GMTToLocalTime]
DescEx="<p>Converts the given <var>TDateTime</var> value <var>GMTTime</var> from GMT (UTC) to local time.</p><p>Raises an exception if <var>GMTTime</var> is not valid or can't be converted.</p>"
Extra="<p><warning>Warning:</warning> This routine requires the Windows NT platform (NT, 2000, XP, Vista etc).</p>"
Units=Windows,SysUtils
SeeAlso=DateTimeToWinFileTime,NowGMT
Snip=095.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[LongDayName]
DescEx="<p>Gets the long name of the day specified by a date.</p>"
Extra="<p>Users of Delphi XE &amp; later or Free Pascal 2.6.0 &amp; later should use <var>LongDayNameXE</var> instead of this routine.</p><p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils
SeeAlso=ShortDayName,LongMonthName,LongDayNameXE
Snip=233.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=N
DelphiXE4=N
DelphiXE5=N
DelphiXE6=N
DelphiXE7=N
DelphiXE8=N
Delphi10S=N
FPC=Y

[LongDayNameXE]
DescEx="<p>Gets the long name of the day specified by a date.</p>"
Extra="<p>This is a version of <var>LongDayName</var> suitable for use with Delphi XE &amp; later or Free Pascal 2.6.0 &amp; later. For Delphi 2010 and earlier, use <var>LongDayName</var> instead.</p><p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils
SeeAlso=ShortDayNameXE,LongMonthNameXE,LongDayName
Snip=551.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=N
Delphi7=N
Delphi2005Win32=N
Delphi2006Win32=N
Delphi2007=N
Delphi2009Win32=N
Delphi2010=N
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[LongMonthName]
DescEx="<p>Gets the long name of the month specified by a date.</p>"
Extra="<p>Users of Delphi XE &amp; later or Free Pascal 2.6.0 &amp; later should use <var>LongMonthNameXE</var> instead of this routine.</p><p>Amalgam of code contributed by both Bill Miller and Peter Johnson.</p>"
Units=SysUtils
Depends=DateMonth
SeeAlso=ShortMonthName,LongDayName,LongMonthNameXE
Snip=234.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=N
DelphiXE4=N
DelphiXE5=N
DelphiXE6=N
DelphiXE7=N
DelphiXE8=N
Delphi10S=N
FPC=Y

[LongMonthNameXE]
DescEx="<p>Gets the long name of the month specified by a date.</p>"
Extra="<p>This is a version of <var>LongMonthName</var> suitable for use with Delphi XE &amp; later or Free Pascal 2.6.0 &amp; later. For Delphi 2010 and earlier, use <var>LongMonthName</var> instead.</p><p>Amalgam of code contributed by both Bill Miller and Peter Johnson.</p>"
Units=SysUtils
Depends=DateMonth
SeeAlso=ShortMonthNameXE,LongDayNameXE,LongMonthName
Snip=552.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=N
Delphi7=N
Delphi2005Win32=N
Delphi2006Win32=N
Delphi2007=N
Delphi2009Win32=N
Delphi2010=N
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[MinsToStr]
DescEx="<p>Converts the given number of minutes to a formatted days / hours / minutes string.</p>"
Extra="<p>Modified from code contributed by &quot;michael&quot;.</p>"
Units=SysUtils
Snip=632.dat
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
DelphiXE6=Y
Delphi10S=Y
FPC=Y

[NowGMT]
DescEx="<p>Returns the current date and time converted to UTC/GMT.</p>"
Units=SysUtils,Windows
SeeAlso=GMTToLocalTime
Snip=628.dat
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[RFC1123DateGMT]
DescEx="<p>Returns the given date time value, which must be in GMT/UTC, as a RFC1123 formatted string.</p>"
Units=SysUtils
SeeAlso=NowGMT
TestInfo=basic
Snip=629.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[RFC2822Date]
DescEx="<p>Returns the RFC 2822 representation of the date (in local time) specified in the <var>LocalTime</var> parameter. The <var>IsDST</var> parameter indicates whether <var>LocalTime</var> is in daylight saving time or not.</p>"
Extra="<p>This date format is defined by section 3.3 of <a href="http://www.faqs.org/rfcs/rfc2822.html">RFC 2882</a>.</p>"
Units=SysUtils,Windows
Snip=374.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SecondsToTime]
DescEx="<p>Converts a number of seconds into a <var>TDateTime</var> value.</p>"
Extra="<p>This routine uses knowledge of the internal composition of a <var>TDateTime</var>.</p>"
Units=SysUtils
Snip=357.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ShortDayName]
DescEx="<p>Gets the short name of the day specified by a date.</p>"
Extra="<p>Users of Delphi XE &amp; later or Free Pascal 2.6.0 &amp; later should use <var>ShortDayNameXE</var> instead of this routine.</p><p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils
SeeAlso=LongDayName,ShortMonthName,ShortDayNameXE
Snip=235.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=N
DelphiXE4=N
DelphiXE5=N
DelphiXE6=N
DelphiXE7=N
DelphiXE8=N
Delphi10S=N
FPC=Y

[ShortDayNameXE]
DescEx="<p>Gets the short name of the day specified by a date.</p>"
Extra="<p>This is a version of <var>ShortDayName</var> suitable for use with Delphi XE &amp; later or Free Pascal 2.6.0 &amp; later. For Delphi 2010 and earlier, use <var>ShortDayName</var> instead.</p><p>Adapted from code contributed by Bill Miller.</p>"
Units=SysUtils
SeeAlso=LongDayNameXE,ShortMonthNameXE,ShortDayName
Snip=553.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=N
Delphi7=N
Delphi2005Win32=N
Delphi2006Win32=N
Delphi2007=N
Delphi2009Win32=N
Delphi2010=N
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ShortMonthName]
DescEx="<p>Gets the short name of the month specified by a date.</p>"
Extra="<p>Users of Delphi XE &amp; later or Free Pascal 2.6.0 &amp; later should use <var>ShortMonthNameXE</var> instead of this routine.</p><p>Amalgam of code contributed by both Bill Miller and Peter Johnson.</p>"
Units=SysUtils
Depends=DateMonth
SeeAlso=LongMonthName,ShortDayName,ShortMonthNameXE
Snip=236.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=N
DelphiXE4=N
DelphiXE5=N
DelphiXE6=N
DelphiXE7=N
DelphiXE8=N
Delphi10S=N
FPC=Y

[ShortMonthNameXE]
DescEx="<p>Gets the short name of the month specified by a date.</p>"
Extra="<p>This is a version of <var>ShortMonthName</var> suitable for use with Delphi XE &amp; later or Free Pascal 2.6.0 &amp; later. For Delphi 2010 and earlier, use <var>ShortMonthName</var> instead.</p><p>Amalgam of code contributed by both Bill Miller and Peter Johnson.</p>"
Units=SysUtils
Depends=DateMonth
SeeAlso=LongMonthNameXE,ShortDayNameXE,ShortMonthName
Snip=554.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=N
Delphi7=N
Delphi2005Win32=N
Delphi2006Win32=N
Delphi2007=N
Delphi2009Win32=N
Delphi2010=N
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[WesternEaster]
DescEx="<p>Returns the date of Easter Sunday for the given year in the Gregorian calendar as used by Western Christian Churches.</p>"
Extra="<p>This routine is derived from a snippet taken from the SWAG Archive. That snippet was converted to Pascal by Kerry Sokalsky from Modula-2 code written by Greg Vigneault in 1993.</p><p>The algorithm was taken from chapter 4 of &quot;Astronomical Formulae for Calculators&quot; 2nd edition; by Jean Meeus; publisher: Willmann-Bell Inc., ISBN 0-943396-01-8.</p><p>The algorithm is valid for all years in the Gregorian calendar, i.e. from 1583 onwards. The extreme dates of Easter are March 22 (as in 1818 and 2285) and April 25 (as in 1886, 1943, 2038).</p><p>For more details of the algorithm see <a href="http://en.wikipedia.org/wiki/Computus#Anonymous_Gregorian_algorithm">this article</a> on Wikipedia.</p>"
Units=SysUtils
TestInfo=advanced
AdvancedTest.Level=unit-tests
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Date"
Snip=610.dat
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
