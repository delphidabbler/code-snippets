# DelphiDabbler Code Snippets Database v2
#
# Drive Management category file
#
# This file is licensed under the MIT license, copyright © 2020 Peter Johnson,
# https://gravatar.com/delphidabbler

[CurentDrive]
DescEx="<p>Returns the letter that identifies the current drive.</p>"
Extra="<p>Modified from Bill Miller's snippets collection.</p>"
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=352.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DriveDisplayNames]
DescEx="<p>Gets list of display names for all the system's drives and stores in a given string list.</p>"
Units=Classes,ShellAPI,SysUtils
Depends=ListDrives,DriveDisplayName
SeeAlso=DriveDisplayName,ListDrives
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=070.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DriveRootPath]
DescEx="<p>Returns root drive path for drive with given number.</p>"
SeeAlso=DriveTypeFromPath,IsValidDriveNum
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=064.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DriveTypeFromPath]
DescEx="<p>Returns type of drive that contains the given (full) path.</p>"
Units=Windows,SysUtils
SeeAlso=DriveRootPath,DriveDisplayName,IsValidDrive
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=028.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[FileSystemName]
DescEx="<p>Returns name of a drive's file system or empty string if file system can't be determined or drive is not valid.</p>"
Units=Windows
SeeAlso=VolumeName
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=138.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[VolumeName]
DescEx="<p>Returns the volume name of the given drive or empty string if the volume has no name or the drive is not valid.</p>"
Units=Windows
SeeAlso=FileSystemName,DeleteVolumeName,SetVolumeName
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=137.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DeleteVolumeName]
DescEx="<p>Deletes an existing volume label on a given drive. Returns True on success and False on failure.</p>"
Extra="<p><warning>Note:</warning> Fails and returns False if the process has insufficient privileges to set the volume name.</p>"
Units=Windows
SeeAlso=VolumeName,SetVolumeName
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=329.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DiskSpaceInfo]
DescEx="<p>Gets information about the size of a drive and the space available to the current user. Returns True if the the required information can be obtained and False if not.</p><p>On success <var>AvailBytes</var> is the amount of space available to the current user, <var>TotalBytes</var> is the total number of bytes on the disk that is available to the current user and <var>FreeBytes</var> is the total number of free bytes on the disk.</p>"
Extra="<p>Drive must be a valid drive such as <mono>C:\</mono> or a UNC name such as <mono>\\MyServer\MyShare\</mono> (with trailing backslash).</p><p>If per-user disk quotas are being used then the value of <var>AvailBytes</var> maybe less than the free space available on the disk and <var>TotalBytes</var> may be less that the total number of bytes on the disk.</p><p>Loosely based on code contributed by Bill Miller.</p>"
Units=SysUtils
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=166.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[DriveDisplayName]
DescEx="<p>Returns the display name for the drive with the given root path.</p>"
Extra="<p><strong>Note:</strong> On versions of Delphi that do not support the <var>SysUtils.RaiseLastOSError</var> routine, this call can be replaced by <var>RaiseLastWin32Error</var>.</p>"
Units=ShellAPI,SysUtils
SeeAlso=DriveDisplayNames,DriveTypeFromPath,ListDrives
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=069.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetDriveNumber]
DescEx="<p>Returns the zero based drive number for given drive. -1 is returned if drive name does not start with a valid drive letter in the range A..Z.</p>"
Extra="<p><var>Drive</var> can be specified as a disk letter (e.g. <mono>C</mono>), a drive name (e.g <mono>C:</mono> or <mono>C:\</mono>) or an absolute file path on the drive (e.g. <mono>C:\Foo\Bar.txt</mono>).</p>"
Units=SysUtils
Depends=IsCharInSet
SeeAlso=IsValidDriveNum
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=164.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HardDiskSerial]
DescEx="<p>Returns the serial number of the volume whose root directory is contained in the <var>Drive</var> parameter. Returns 0 if the given drive is not valid or has no serial number.</p>"
Extra="<p>The <var>Drive</var> parameter must either be the name of a local drive (e.g. <mono>C:\</mono>) or network share (e.g. <mono>\\MyServer\MyShare\</mono>). A trailing backslash must be provided. A drive letter on its own will not be recognised.</p>"
Units=Windows
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=066.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsDriveReady]
DescEx="<p>Checks if a the given local drive is ready. True is returned if the drive is ready or False if not ready or if the drive is not recognised.</p>"
Extra="<p><var>Drive</var> can be specified as a disk letter (e.g. <mono>C</mono>), a drive name (e.g <mono>C:</mono> or <mono>C:\</mono>) or an absolute file path on the drive (e.g. <mono>C:\Foo\Bar.txt</mono>).</p><p>Based on code contributed by Bill Miller.</p>"
Units=Windows,SysUtils
Depends=GetDriveNumber
SeeAlso=IsValidDrive,DriveTypeFromPath
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=165.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsValidDrive]
DescEx="<p>Checks if the given drive path represents a valid drive.</p>"
Extra="<p>A valid drive can be a disk letter (e.g. <mono>C</mono>), a drive name (e.g <mono>C:</mono> or <mono>C:\</mono>) or an absolute file path on the drive (e.g. <mono>C:\Foo\Bar.txt</mono>).</p>"
Depends=DriveTypeFromPath,IsDriveReady
SeeAlso=IsValidDriveNum,DriveTypeFromPath
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=072.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsValidDriveNum]
DescEx="<p>Returns True if the drive specified by the given number is valid and False otherwise.</p>"
Extra="<p>Drive numbers must be in the range 0..25, with 0 mapping onto <mono>A:\</mono> and 25 mapping onto <mono>Z:\</mono>.</p>"
Units=Windows
SeeAlso=IsValidDrive,GetDriveNumber
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=073.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ListDrives]
DescEx="<p>Gets a list of all the system's drives and appends their root paths to the given string list.</p>"
Extra="<p><strong>Note:</strong> On versions of Delphi that do not support the <var>SysUtils.RaiseLastOSError</var> routine, this call can be replaced by <var>RaiseLastWin32Error</var>.</p>"
Units=Classes,Windows,SysUtils
Depends=MultiSzToStrings
SeeAlso=DriveDisplayName,DriveDisplayNames
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=068.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SetVolumeName]
DescEx="<p>Sets the name of the volume on a given drive. Returns True on success and False on failure.</p>"
Extra="<p><warning>Note:</warning> Fails and returns False if the process has insufficient privileges to set the volume name.</p>"
Units=Windows
SeeAlso=DeleteVolumeName,VolumeName
TestInfo=advanced
AdvancedTest.Level=demo
AdvancedTest.URL="https://github.com/delphidabbler/code-snippets/tree/master/tests/Cat-Drive"
Snip=330.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
