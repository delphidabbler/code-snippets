# DelphiDabbler Code Snippets Database v2
#
# File and Stream I/O category file
#
# This file is licensed under the MIT license, copyright © 2020 Peter Johnson,
# https://gravatar.com/delphidabbler

[FileToString]
DescEx="<p>Reads text in the default ANSI encoding from file named by <var>FileName</var> into a string, which is returned.</p>"
Units=Classes,SysUtils
Depends=StreamToString
SeeAlso=StringToFile,UnicodeFileToWideString,WideStringToUnicodeFile
Snip=075.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[StreamToString]
DescEx="<p>Reads text in the default ANSI encoding from stream <var>Stm</var> into a string, which is returned. The stream is read from the current position.</p>"
Units=Classes
SeeAlso=StringToStream,WideStringToUnicodeStream,UnicodeStreamToWideString
Snip=078.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[StringToFile]
DescEx="<p>Writes string <var>Src</var> to text file named by <var>FileName</var>. Text is written in default ANSI encoding.</p>"
Units=Classes
Depends=StringToStream
SeeAlso=FileToString,UnicodeFileToWideString,WideStringToUnicodeFile
Snip=079.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[StringToStream]
DescEx="<p>Writes string <var>Str</var> into stream <var>Stm</var> at the current stream position. Text is written in default ANSI encoding.</p>"
Units=Classes
SeeAlso=StreamToString,WideStringToUnicodeStream,UnicodeStreamToWideString
Snip=080.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[WideStringToUnicodeFile]
DescEx="<p>Writes wide string <var>Str</var> to Unicode text file, named by <var>FileName</var>, in UTF16 little endian format with byte order mark.</p>"
Units=Classes
Depends=WideStringToUnicodeStream
SeeAlso=UnicodeFileToWideString,FileToString,StringToFile
Snip=083.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[WideStringToUnicodeStream]
DescEx="<p>Writes wide string <var>Str</var> to stream <var>Stm</var> in Unicode UTF16 little endian format, with byte order mark.</p>"
Units=Windows,Classes
SeeAlso=UnicodeStreamToWideString,StringToStream,StreamToString
Snip=084.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[FileHasWatermark_A]
DisplayName="FileHasWatermark (byte array overload)"
DescEx="<p>Checks if the file named <var>FileName</var> contains the sequence of bytes given in the byte arrary <var>Watermark</var> starting at the byte offset given by the (optional) <var>Offset</var> parameter.</p>"
Extra="<p>Taken from <a href="http://delphidabbler.blogspot.co.uk/2012/10/checking-file-preambles-and-watermarks.html">Checking File Preambles and Watermarks</a> on DelphiDabbler's blog.</p>"
Units=SysUtils,Classes
Depends=StreamHasWatermark
SeeAlso=FileHasWatermark_B,StreamHasWatermark
Snip=517.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[FileHasWatermark_B]
DisplayName="FileHasWatermark (ANSI string overload)"
DescEx="<p>Checks if the file named <var>FileName</var> contains ANSI text <var>Watermark</var> starting at the byte offset given by the (optional) <var>Offset</var> parameter.</p>"
Extra="<p>Taken from <a href="http://delphidabbler.blogspot.co.uk/2012/10/checking-file-preambles-and-watermarks.html">Checking File Preambles and Watermarks</a> on DelphiDabbler's Blog.</p>"
Depends=FileHasWatermark_A
SeeAlso=FileHasWatermark_A,StreamHasWatermark
Snip=518.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[StreamHasWatermark]
DescEx="<p>Checks if the given stream has the given &quot;watermark&quot; (i.e. sequence of bytes) starting from the current position in the stream.</p><p>The stream position is unaltered.</p>"
Extra="<p>For maximum flexibility the function checks the stream from the current position. So, to check from the start of a stream make sure it's <var>Position</var> property is set to 0 before calling the routine.</p><p>For examples of use see <a href="http://delphidabbler.blogspot.co.uk/2012/10/checking-file-preambles-and-watermarks.html">Checking File Preambles and Watermarks</a> posted on DelphiDabbler's Blog.</p>"
Units=Classes
SeeAlso=FileHasWatermark_A,FileHasWatermark_B
Snip=516.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[UnicodeFileToWideString]
DescEx="<p>Reads text from the file named by <var>FileName</var> into a wide string and returns the string.</p><p>If the file begins with a UTF16 little endian byte order mark then the text is read as Unicode, otherwise it is assumed to be ANSI text in the default encoding.</p>"
Extra="<p>This function works with files up to 2Gb. In later versions of Delphi the required <var>UnicodeStreamToWideString</var> function can be modified to work with larger streams.</p>"
Units=Classes,SysUtils
Depends=UnicodeStreamToWideString
SeeAlso=WideStringToUnicodeFile,FileToString,StringToFile
Snip=081.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[UnicodeStreamToWideString]
DescEx="<p>Reads text from stream <var>Stm</var> into a wide string an returns the string.</p><p>If a UTF16 little endian byte order mark is found then the text is read as Unicode, otherwise it is assumed to be ANSI text in the default encoding.</p>"
Extra="<p>This function works with streams up to 2Gb. In later versions of Delphi change the type of the <var>DataSize</var> variable to <var>Int64</var> to work with larger streams.</p>"
Units=Windows,Classes
Depends=IsUnicodeStream,StreamToString
SeeAlso=WideStringToUnicodeStream,StreamToString,StringToStream
Snip=082.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
