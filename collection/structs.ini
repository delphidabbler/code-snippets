# DelphiDabbler Code Snippets Database v2
#
# Structures category file
#
# This file is licensed under the MIT license, copyright © 2025 Peter Johnson,
# https://gravatar.com/delphidabbler

[BoundsF]
DescEx="<p>Constructs and returns a <var>TRectF</var> record with the given top-left coordinate, width and height.</p>"
SeeAlso=RectF,TRectF
Depends=TRectF
Snip=493.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[PointF]
DescEx="<p>Constructs and returns a <var>TPointF</var> record with the given x &amp; y coordinates.</p>"
SeeAlso=TPointF,RectF
Depends=TPointF
Snip=491.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[Range]
DescEx="<p>Constructs and returns a <var>TRange</var> record with bounds <var>A</var> and <var>B</var>.</p><p>The smaller of <var>A</var> and <var>B</var> is used as the lower bound and the larger as the upper bound. If both values are equal then the range will be empty.</p>"
Depends=TRange
SeeAlso=TRange
SeeAlso=TRange,TRangeEx
Snip=580.dat
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[RectF]
DescEx="<p>Constructs and returns a <var>TRectF</var> record with the given left, top, right &amp; bottom coordinates.</p>"
SeeAlso=BoundsF,PointF,TRectF
Depends=TRectF
Snip=492.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[Size]
DescEx="<p>Constructs and returns a <var>TSize</var> record with the given dimensions.</p>"
Extra="<p>This routine complements the <var>Rect</var> and <var>Point</var> routines defined in the Delphi RTL.</p><p>For versions of Delphi before Delphi 6 replace the <var>Types</var> unit with <var>Windows</var> to get the routine to compile.</p>"
Units=Types
SeeAlso=TSizeEx
Snip=488.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TPointF]
Kind=type
DescEx="<p>Encapsulates a point with double precision floating point coordinates.</p>"
SeeAlso=PointF,TRectF
Snip=489.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TRange]
Kind=type
DescEx="<p>Encapsulates the upper and lower bounds of a range of values.</p>"
SeeAlso=Range
SeeAlso=Range,TRangeEx
Snip=579.dat
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TRectF]
Kind=type
DescEx="<p>Encapsulates a rectangle with double precision floating point size and position.</p>"
SeeAlso=RectF,BoundsF,TPointF
Depends=TPointF
Snip=490.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TRangeEx]
Kind=class
DescEx="<p>Encapsulates a range of integers with a methods to test whether a value falls within the range and to adjust the value to fit.</p>"
Units=Math
SeeAlso=Range,TRange
Snip=578.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=N
Delphi7=N
Delphi2005Win32=N
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TSizeEx]
Kind=class
DescEx="<p>Record that represents the size, i.e. the width and height, of something.</p><p>This is an extended version of the <var>TSize</var> record that features equality and inequality operator overloading, a test for zero size and a constructor.</p><p><var>TSizeEx</var> is assignment compatible and comparible with the Delphi RTL's <var>TSize</var> record.</p>"
Units=Types
SeeAlso=Size
Snip=510.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=N
Delphi7=N
Delphi2005Win32=N
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
