# DelphiDabbler Code Snippets Database v2
#
# Windows category file
#
# This file is licensed under the MIT license, copyright © 2024 Peter Johnson,
# https://gravatar.com/delphidabbler

[ClientRectToScreen]
DescEx="<p>Translates the rectangle <var>CliRect</var>, which has coordinates relative to the client area of control <var>Ctrl</var>, into global screen coordinates and returns the result.</p>"
Units=Controls,Windows
SeeAlso=CtrlBoundsToScreen
Snip=262.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[CtrlBoundsToScreen]
DescEx="<p>Returns the bounding rectangle of control <var>Ctrl</var> in terms of global screen co-ordinates.</p>"
Units=Classes,Controls,Windows
Depends=ClientRectToScreen
SeeAlso=ClientRectToScreen
Snip=263.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[DisableLayersSupport]
DescEx="<p>Disables layers (transparency) support for the window with the given handle.</p>"
Units=Windows
SeeAlso=EnableLayersSupport,WindowSupportsLayers
Snip=283.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DisableTreeViewToolTips]
DescEx="<p>Disables the tool tips that are displayed in the given treeview control when the mouse is hovered over an item that is cropped because it is too large to display.</p>"
Extra="<p>This routine is of use with earlier versions of Delphi in which the tree view component does not have a property to switch tool tips on and off.</p>"
Units=Windows,ComCtrls,CommCtrl
Snip=507.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[EnableLayersSupport]
DescEx="<p>Enables layers (transparency) support for the window with the given handle.</p><p>Returns True on success or False on failure.</p>"
Units=Windows
Depends=WindowSupportsLayers
SeeAlso=DisableLayersSupport,WindowSupportsLayers
Snip=284.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetIdleTime]
DescEx="<p>Returns the time ellapsed since the last user input.</p>"
Extra="<p>Modified from code contributed by Topellina.</p>"
Units=Windows
Snip=371.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[GetTopLevelWindow]
DescEx="<p>Returns the handle of the top level window of which <var>Wnd</var> is a child window.</p><p>If <var>Wnd</var> is already a top level window then <var>Wnd</var> itself is returned. The return value is 0 if <var>Wnd</var> is not a valid window.</p>"
Units=Windows
Depends=IsTopLevelWindow
SeeAlso=IsTopLevelWindow
Snip=171.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetWindowTitle]
DescEx="<p>Returns the title of the window with the given handle.</p><p>Titles of more than 255 characters are truncated.</p>"
Extra="<p>Contributed by Guru Kathiresan.</p>"
Units=Windows
Snip=500.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HScrollbarHeight]
DescEx="<p>Returns the height of the given control's horizontal scrollbar if shown, or 0 if not shown.</p>"
Units=Controls,Windows,StdCtrls
Depends=WinControlScrollbars
SeeAlso=VScrollbarWidth,WinControlScrollbars,WindowScrollbars
Snip=215.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[IsEqualResID]
DescEx="<p>Checks whether the two given resource ids are equal.</p>"
Units=SysUtils,Windows
Depends=IsIntResource
SeeAlso=IsIntResource,ResourceIDToStr
Snip=267.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsTopLevelWindow]
DescEx="<p>Checks if the window with the given handle is a top level window.</p>"
Units=Windows
SeeAlso=GetTopLevelWindow
Snip=172.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[MemoCursorPos]
DescEx="<p>Returns a <var>TPoint</var> value containing the coordinates of the cursor in the given memo control.</p>"
Extra="<p>Based on code contributed by Shlomo Abuisak.</p>"
Units=Messages,Windows,StdCtrls
Snip=334.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[ResourceExists]
DescEx="<p>Checks if a resource with name <var>ResName</var> and type <var>ResType</var> exists in the module with handle <var>Module</var>.</p>"
Extra="<p>This routine is language agnostic: it takes no account of the language of the required resource.</p>"
Units=Windows
SeeAlso=ResourceExistsEx
Snip=198.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ResourceExistsEx]
DescEx="<p>Checks if a resource with name <var>ResName</var>, type <var>ResType</var> and language ID <var>Language</var> exists in the module with handle <var>Module</var>.</p>"
Units=Windows
SeeAlso=ResourceExists
Snip=199.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ResourceIDToStr]
DescEx="<p>Converts the given resource identifier to its string representation.</p><p>A string valued resource identifier is returned as-is but an integer valued identifier is returned as a <mono>#</mono> character followed by the integer value as a string.</p>"
Units=SysUtils
Depends=IsIntResource
SeeAlso=IsEqualResID,IsIntResource
Snip=200.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SetTransparencyLevel]
DescEx="<p>Sets the transparency level of the window with handle <var>HWnd</var> to the value given by <var>Level</var>.</p>"
Extra="<p>This function requires that the window supports layers. The transparency level is in the range [0..255].</p>"
Units=Windows
Depends=WindowSupportsLayers
SeeAlso=DisableLayersSupport,EnableLayersSupport,WindowSupportsLayers
Snip=285.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TreeNodeChildCount]
DescEx="<p>Returns the number of child nodes of the given tree node.</p>"
Extra="<p>Derived from code contributed by Bill Miller.</p>"
Units=ComCtrls
Snip=508.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[VScrollbarWidth]
DescEx="<p>Returns the width of the given control's vertical scrollbar if shown, or 0 if not shown.</p>"
Units=Controls,Windows,StdCtrls
Depends=WinControlScrollbars
SeeAlso=HScrollbarHeight,WinControlScrollbars,WindowScrollbars
Snip=216.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[WinControlScrollbars]
DescEx="<p>Returns a value that specifies which, if any, scroll bars are displayed by the given <var>TWinControl</var>.</p>"
Units=Controls,StdCtrls
Depends=WindowScrollbars
SeeAlso=HScrollbarHeight,VScrollbarWidth,WindowScrollbars
Snip=214.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[WindowScrollbars]
DescEx="<p>Returns a value that specifies which, if any, scroll bars are displayed by the window with the given handle.</p>"
Extra="<p>Based on code by Peter Below from the now defunct Delphi Pool website.</p>"
Units=Windows,StdCtrls
SeeAlso=HScrollbarHeight,VScrollbarWidth,WinControlScrollbars
Snip=213.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[WindowSupportsLayers]
DescEx="<p>Checks if the window with the given handler supports layers (i.e. transparency).</p>"
Units=Windows
Depends=IsFlagSet
SeeAlso=DisableLayersSupport,EnableLayersSupport
Snip=282.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ContainsFocus]
DescEx="<p>Returns True if the specified control, or one of its child controls, currently has the input focus.</p>"
Extra="<p>Adapted from the article &quot;<a href="https://www.thoughtco.com/how-to-move-and-resize-controls-at-run-time-4092542">Implementing 'Contains Focus' for Delphi's Container Controls: TPanel, TGroupBox</a>&quot; on About.com.</p>"
Depends=FocusedControl
SeeAlso=FocusedControl
Units=Windows,Controls
Snip=618.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[FocusedControl]
DescEx="<p>Returns the name of the <var>TWinControl</var> that currently has the focus, or <strong>nil</strong> if there is no such control.</p>"
SeeAlso=ContainsFocus
Units=Windows,Controls
Snip=619.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[IsIntResource]
DescEx="<p>Checks whether <var>ResID</var> is an integer identifier for a resource.</p>"
Extra="<p>Emulates the Windows <var>IS_INTRESOURCE</var> macro.</p>"
SeeAlso=IsEqualResID,ResourceIDToStr
Units=Windows
Snip=049.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[LangIDFromLCID]
DescEx="<p>Extracts and returns a language identifier from the given locale identifier.</p>"
Extra="<p>Emulates the Windows <var>LANGIDFROMLCID</var> macro.</p>"
Units=Windows
SeeAlso=MakeLCID,SortIDFromLCID
Snip=187.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[MakeLangID]
DescEx="<p>Creates and returns a language identifier from primary language identifier <var>P</var> and sublanguage identifier <var>S</var>.</p>"
Extra="<p>Emulates the Windows <var>MAKELANGID</var> macro.</p>"
SeeAlso=MakeLCID,PrimaryLangID,SubLangID
Snip=168.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[MakeLCID]
DescEx="<p>Creates and returns a locale identifier from language identifier <var>LanguageID</var> and sort order identifier <var>SortID</var>.</p>"
Extra="<p>Emulates the Windows <var>MAKELCID</var> macro.</p>"
Units=Windows
SeeAlso=MakeLangID,PrimaryLangID,SubLangID
Snip=189.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[PrimaryLangID]
DescEx="<p>Extracts and returns a primary language identifier from the given language identifier.</p>"
Extra="<p>Emulates the Windows <var>PRIMARYLANGID</var> macro.</p>"
SeeAlso=MakeLangID,MakeLCID,SubLangID
Snip=169.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[REWordAtPos]
DescEx="<p>Returns the word at coordinates (<var>X</var>,<var>Y</var>) in rich edit control <var>RE</var>.</p>"
Extra="<p><strong>Note:</strong> This function assumes that words are separated by one or more of the following white space characters: <em>space</em>, <mono>TAB</mono>, <mono>LF</mono>, <mono>VT</mono>, <mono>FF</mono> and <mono>CR</mono>.</p><p>Adapted from code contributed by Arno Wolff.</p>"
Units=SysUtils,Classes,Messages,Windows,ComCtrls,RichEdit
Depends=IsWhiteSpace
Snip=268.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[SortIDFromLCID]
DescEx="<p>Extracts and returns a sort order identifier from the given locale identifier.</p>"
Extra="<p>Emulates the Windows <var>SORTIDFROMLCID</var> macro.</p>"
Units=Windows
SeeAlso=LangIDFromLCID,MakeLCID
Snip=188.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SubLangID]
DescEx="<p>Extracts and returns a sublanguage identifier from the given language identifier.</p>"
Extra="<p>Emulates the Windows <var>SUBLANGID</var> macro.</p>"
SeeAlso=MakeLangID,MakeLCID,PrimaryLangID
Snip=170.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
