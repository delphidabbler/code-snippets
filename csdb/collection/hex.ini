# DelphiDabbler Code Snippets Database v2
#
# Hex Utilities category file
#
# This file is licensed under the MIT license, copyright © 2020 Peter Johnson,
# https://gravatar.com/delphidabbler

[AddHexPrefix]
DescEx="<p>Adds a valid hex prefix to the given string of hex digits.</p>"
Extra="<p>The hex prefix is '$' when compiled on Delphi or '0x' when compiled on C++ Builder.</p>"
Units=SysUtils
Depends=StripHexPrefix
SeeAlso=StripHexPrefix
TestInfo=advanced
Snip=311.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[BufToHex]
DescEx="<p>Returns a hexadecimal representation of the bytes in the given buffer which has the given size.</p>"
SeeAlso=BytesToHex,ByteToHex,LongWordToHex,QuadWordToHex,WordToHex
TestInfo=advanced
Snip=312.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[BytesToHex]
DescEx="<p>Returns a hexadecimal representation of the given array of bytes.</p>"
Depends=BufToHex
SeeAlso=BufToHex,ByteToHex,LongWordToHex,QuadWordToHex,WordToHex
TestInfo=advanced
Snip=313.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ByteToHex]
DescEx="<p>Returns the hexadecimal representation of the given byte value.</p>"
Units=SysUtils
SeeAlso=BufToHex,BytesToHex,LongWordToHex,QuadWordToHex,WordToHex
TestInfo=advanced
Snip=314.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[LongWordToHex]
DescEx="<p>Returns the hexadecimal representation of the given long (4 byte) word value.</p>"
Units=SysUtils
SeeAlso=BufToHex,BytesToHex,ByteToHex,QuadWordToHex,WordToHex
TestInfo=advanced
Snip=315.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[QuadWordToHex]
DescEx="<p>Returns the hexadecimal representation of the given quad (8 byte) word value.</p>"
Units=SysUtils
SeeAlso=BufToHex,BytesToHex,ByteToHex,LongWordToHex,WordToHex
TestInfo=advanced
Snip=316.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=N
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[StripHexPrefix]
DescEx="<p>Strips any prefix from the given hexadecimal string. Both Delphi ('$') and C ('0x') prefixes are supported.</p>"
Units=SysUtils
SeeAlso=AddHexPrefix
TestInfo=advanced
Snip=310.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TryHexToInt]
DescEx="<p>Attempts to convert the given hexadecimal string into a 32 bit integer.</p><p>Returns True on success and set <var>Value</var> to the converted value. Returns False on error, leaving <var>Value</var> undefined.</p>"
Extra="<p>The hexadecimal string must contain only valid hex digits, optionally prefixed by either '$' or '0x'.</p>"
Depends=AddHexPrefix
SeeAlso=HexToInt,HexToIntDef,TryHexToBuf,TryHexToInt64
TestInfo=advanced
Snip=319.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TryHexToInt64]
DescEx="<p>Attempts to convert the given hexadecimal string into a 64 bit integer.</p><p>Returns True on success and set <var>Value</var> to the converted value. Returns False on error, leaving <var>Value</var> undefined.</p>"
Extra="<p>The hexadecimal string must contain only valid hex digits, optionally prefixed by either '$' or '0x'.</p>"
Depends=AddHexPrefix
SeeAlso=HexToInt64,HexToInt64Def,TryHexToBuf,TryHexToInt
TestInfo=advanced
Snip=320.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[WordToHex]
DescEx="<p>Returns the hexadecimal representation of the given (2 byte) word value.</p>"
Units=SysUtils
SeeAlso=BufToHex,BytesToHex,ByteToHex,LongWordToHex,QuadWordToHex
TestInfo=advanced
Snip=317.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HexByteSize]
DescEx="<p>Returns the number of bytes represented by the given hexadecimal string.</p>"
Extra="<p>Assumes that <var>HexStr</var> contains only valid hex digits, optionally prefixed by '$' or '0x'.</p>"
Depends=StripHexPrefix
SeeAlso=HexToBuf
TestInfo=advanced
Snip=318.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HexToBuf]
DescEx="<p>Writes the bytes represented by the given hexadecimal string into the given buffer, which must be large enough to receive the data.</p>"
Extra="<p>Use <var>HexByteSize</var> to determine the size of buffer required. This function assumes the buffer is the correct size.</p> <p><var>HexStr</var> must not be empty and must contain only valid hex digits, optionally preceded by '$' or '0x'. An exception is raised if an invalid digit is encountered. A leading '0' is added to hex strings with odd length.</p>"
Depends=TryHexToBuf
SeeAlso=TryHexToBuf,HexToBytes,HexToInt,HexToInt64
TestInfo=advanced
Snip=323.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HexToBytes]
DescEx="<p>Writes the bytes represented by the given hexadecimal string into an array of bytes, which is returned.</p>"
Extra="<p><var>HexStr</var> must contain only valid hex digits, optionally prefixed by '$' or '0x' otherwise an exception is raised.</p>"
Depends=TBytes,TryHexToBytes
SeeAlso=TryHexToBytes,HexToBuf,HexToInt,HexToInt64
TestInfo=advanced
Snip=324.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HexToInt]
DescEx="<p>Converts the given hexadecimal string to an integer.</p>"
Extra="<p><var>HexStr</var> must contain only valid hex digits, optionally prefixed by '$' or '0x' otherwise an exception is raised.</p>"
Depends=TryHexToInt
SeeAlso=TryHexToInt,HexToIntDef,HexToBuf,HexToBytes,HexToInt64
TestInfo=advanced
Snip=325.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HexToInt64]
DescEx="<p>Converts the given hexadecimal string to a 64 bit integer.</p>"
Extra="<p><var>HexStr</var> must contain only valid hex digits, optionally prefixed by '$' or '0x' otherwise an exception is raised.</p>"
Depends=TryHexToInt64
SeeAlso=TryHexToInt64,HexToInt64Def,HexToBuf,HexToBytes,HexToInt
TestInfo=advanced
Snip=326.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HexToInt64Def]
DescEx="<p>Converts the given hexadecimal string to a 64 bit integer. If the conversion fails the specified default value is returned.</p>"
Extra="<p><var>HexStr</var> may be prefixed by either '$' or '0x' or have no prefix.</p>"
Depends=TryHexToInt64
SeeAlso=TryHexToInt64,HexToInt64,HexToIntDef
TestInfo=advanced
Snip=328.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HexToIntDef]
DescEx="<p>Converts the given hexadecimal string to an integer. If the conversion fails the specified default value is returned.</p>"
Extra="<p><var>HexStr</var> may be prefixed by either '$' or '0x' or have no prefix.</p>"
Depends=TryHexToInt
SeeAlso=TryHexToInt,HexToInt,HexToInt64Def
TestInfo=advanced
Snip=327.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TryHexToBuf]
DescEx="<p>Attempts to convert the given hexadecimal string into a binary value that is written to buffer <var>Buf</var>.</p><p>Returns True on success or False on error, leaving <var>Buf</var> in an unknown state.</p><p><var>Buf</var> must be large enough to receive all the converted data.</p>"
Extra="<p>The hexadecimal string must not be empty and contain only valid hex digits, optionally prefixed by '$' or '0x'. A leading '0' is added to hex strings with odd length.</p><p>Use <var>HexByteSize</var> to determine the size of buffer required.</p>"
Depends=StripHexPrefix,TryHexToInt
SeeAlso=HexToBuf,TryHexToBytes,TryHexToInt,TryHexToInt64
TestInfo=advanced
Snip=321.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TryHexToBytes]
DescEx="<p>Attempts to convert the given hexadecimal string into an array of bytes.</p><p>Returns True on success and passes back resulting array in <var>Bytes</var>. Returns False on error, leaving <var>Bytes</var> underfined.</p>"
Extra="<p>The hexadecimal string must contain only valid hex digits, optionally prefixed by '$' or '0x'. A leading '0' is added to hex strings with odd length.</p>"
Depends=HexByteSize,TBytes,TryHexToBuf
SeeAlso=HexToBytes,TryHexToBuf,TryHexToInt,TryHexToInt64
TestInfo=advanced
Snip=322.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
