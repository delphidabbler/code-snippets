[CopyFile]
DescEx="Copies <var>Source</var> file to <var>Dest</var> file, preserving modification date."
Units=Classes,SysUtils
SeeAlso=CopyFiles
Snip=029.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[CopyFiles]
DescEx="<p>Copies files from directory name <var>SrcDir</var> to directory named <var>DestDir</var>. Files to be copied are filtered using DOS wildcard mask in <var>WildCard</var>.</p><p>Sub-directories are not copied. <var>DestDir</var> must exist.</p>"
Credits="Contributed by Jan Roza."
Units=Classes,SysUtils,Windows
Depends=ListFiles,DirToPath
SeeAlso=CopyFile
Snip=167.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[CreateURLShortcut]
Desc="Creates a URL shortcut file with the given name for the given URL, overwriting any existing file. An exception is raised if file can't be created."
SeeAlso=IsURLShortcut,URLFromShortcut
Snip=005.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DefaultFileExt]
Desc="Adds a default extension to a file name if it has no extension but leaves the file name unchanged if it has an extension."
Depends=ForceFileExt,HasFileExt
SeeAlso=ForceFileExt,HasFileExt,RemoveFileExt
Snip=398.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DeleteFiles]
DescEx="<p>Deletes all files in the directory <var>Dir</var> that match the given wildcard and returns the number of files deleted.</p><p>If <var>Wildcard</var> is '' then all files are deleted.</p><p>Sub-directories of <var>Dir</var> are not deleted.</p>"
Units=Classes,SysUtils
Depends=ListFiles,DirToPath
SeeAlso=DeleteFileWithUndo,DeleteFilesWithUndo
Snip=058.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DeleteFilesWithUndo]
Desc="Deletes a list of files and sends them all to the recycle bin. Returns True if the files were deleted successfully and False if the function fails."
Comments="If any of the listed files don't exist none will be deleted and the function will fail."
Units=Classes,ShellAPI
Depends=StringsToMultiSz
SeeAlso=EmptyRecycleBin,DeleteFiles,DeleteFileWithUndo
Snip=337.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DeleteFileWithUndo]
Desc="Deletes given file and sends it to recycle bin. Returns true if file deleted successfully."
Units=ShellAPI
SeeAlso=EmptyRecycleBin,DeleteFiles,DeleteFilesWithUndo
Snip=006.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DirToPath]
Desc="Returns the given directory with a trailing backslash. If the directory already ends in backslash it is returned unchanged."
SeeAlso=PathToDir
Snip=030.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DOSToUnixPath]
Desc=Converts a DOS path to a Unix path and returns it.
Units=SysUtils
Snip=008.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[EnsureFolders]
Desc=Ensures that the given folder and all folders on its path exist, and creates them if they do not.
Units=SysUtils
Depends=PathToDir,IsDirectory
SeeAlso=ListFiles
Snip=059.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[FileSizeString]
Desc="Returns the size of a file as a formatted string. For files larger than 1Kb the size is approximate. If the file size can't be read then the empty string is returned."
Credits="Modification of code contributed by Michael Rockett."
Units=SysUtils
Depends=SizeOfFile64
Snip=407.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ForceFileExt]
Desc="Forces a file name to have a specified extension. If the given extension is the empty string then any existing extension is removed."
Depends=RemoveFileExt
SeeAlso=DefaultFileExt,HasFileExt,RemoveFileExt
Snip=399.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetFileDate]
Desc=Returns modification date of given file encoded as integer.
Units=SysUtils
SeeAlso=SetFileDate
Snip=009.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetFixedFileVerInfo]
DescEx="Extracts fixed version information from file named by <var>FileName</var>. If file contains version information it is returned via <var>FFI</var> parameter and function returns True, otherwise False is returned and <var>FFI</var> is undefined."
Units=Windows
SeeAlso=HasVerInfo
Snip=010.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetLastDirectory]
Desc="Returns the last directory in a specified path or the empty string if the given path is not a directory."
Credits="Modified from code contributed by Bill Miller."
Units=SysUtils
Depends=IsDirectory,PathToDir
Snip=408.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HasFileExt]
Desc="Determines if a file name has an extension. A file name ending in '.' is deemed to have an empty extension."
Units=SysUtils
SeeAlso=DefaultFileExt,ForceFileExt,RemoveFileExt
Snip=400.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HasVerInfo]
Desc=Returns true if the given file contains version information and false if not.
Units=Windows
SeeAlso=GetFixedFileVerInfo
Snip=036.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsArchiveFile]
Desc="Checks if a file's archive attribute is set."
Units=SysUtils
Depends=IsFlagSet
SeeAlso=IsDirectory,IsFile,IsHiddenFile,IsReadOnlyFile,IsSystemFile
Snip=207.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsFile]
Desc="Determines if the provided path specifies a file."
Units=SysUtils
Depends=IsFlagSet
SeeAlso=IsArchiveFile,IsDirectory,IsHiddenFile,IsReadOnlyFile,IsSystemFile
Snip=208.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsHiddenFile]
Desc="Checks if a file's hidden attribute is set."
Units=SysUtils
Depends=IsFlagSet
SeeAlso=IsArchiveFile,IsDirectory,IsFile,IsReadOnlyFile,IsSystemFile
Snip=209.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsReadOnlyFile]
Desc="Checks if a file's read-only attribute is set."
Units=SysUtils
Depends=IsFlagSet
SeeAlso=IsArchiveFile,IsDirectory,IsFile,IsHiddenFile,IsSystemFile
Snip=210.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsSystemFile]
Desc="Checks if a file's system attribute is set."
Units=SysUtils
Depends=IsFlagSet
SeeAlso=IsArchiveFile,IsDirectory,IsFile,IsHiddenFile,IsReadOnlyFile
Snip=211.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsURLShortcut]
Desc=Returns true if the given file is a URL shortcut file and false if not.
Units=SysUtils,IniFiles
SeeAlso=CreateURLShortcut,URLFromShortcut
Snip=048.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsValidFileName]
Desc="Tests if a file name is a valid on Windows file systems."
Credits="Based on information contained in the [File Names, Paths and Namespaces] topic on the Microsoft Developer Network."
Credits_URL="http://msdn.microsoft.com/en-us/library/aa365247.aspx"
Units=SysUtils
Depends=SizeOfFile64
Snip=260.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ListFiles]
DescEx="<p>Gets a list of the files and sub-directories of the given directory that match the given wild card and appends them to the given string list.</p><p>Returns True if <var>Dir</var> is a valid directory and False if not.</p><p>If <var>Wildcard</var> is not specified, *.* is assumed</p>"
Units=Classes,SysUtils
Depends=IsDirectory,DirToPath
SeeAlso=DeleteFiles,EnsureFolders
Snip=057.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[LongToShortFilePath]
Desc="Converts the given long file name to the equivalent shortened DOS style 8.3 path."
Units=Windows
SeeAlso=ShortToLongFilePath
Snip=074.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[PathIsRoot]
Desc="Checks if the given path is a root directory."
Credits="Slightly modified from code created by Steve Moss, CoCo Systems Ltd. Contributed by Bill Miller."
Comments="Works with UNC paths and paths with drive specifiers."
Units=SysUtils
Depends=DirToPath
Snip=354.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[PathToDir]
Desc=Returns the given directory with any single trailing backslash removed. If the directory does not end in a backslash it is returned unchanged.
SeeAlso=DirToPath
Snip=056.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[RemoveFileExt]
Desc="Removes the extension from a file name. File name is unchanged if it has no extension."
SeeAlso=DefaultFileExt,ForceFileExt,HasFileExt
Units=SysUtils
Snip=122.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SetFileDate]
Desc=Sets modification date of given file to given integer coded value. Returns True on success and False on failure.
Units=SysUtils
SeeAlso=GetFileDate
Snip=011.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SizeOfFile64]
Desc="Gets the size of a file.  Returns -1 if the file doesn't exist or can't be accessed."
Comments="Works with files larger than 2Gb."
Units=SysUtils,Windows
SeeAlso=SizeOfFile
Snip=257.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[Touch]
Desc=Sets modification date of given file to current date and time. Returns True if date set successfully or false on error.
Units=SysUtils
Snip=037.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[URLFromShortcut]
Desc="Returns the URL referenced by the given URL shortcut file, or the empty string if the given file is not a shortcut file."
Credits="Derived from a similar function published on [Torry's Delphi Pages]."
Credits_URL="http://www.torry.net/"
Units=IniFiles
SeeAlso=CreateURLShortcut,IsURLShortcut
Snip=045.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

# from file.3.ini

[CountFiles]
DescEx="<p>Returns the number of files in the folder specified by <var>APath</var> that match the DOS style wildcard <var>AWildCard</var>.</p><p>Any sub-directories of <var>APath</var> and the files they contain are not counted.</p>"
Extra="<p>Slightly modified routine from Bill Miller's snippets collection.</p>"
Units=SysUtils
Depends=DirToPath,IsFlagSet,ProcessMessages
Snip=351.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DirPurge]
Desc="Deletes the given directory and all its files and sub-directories. If the directory does not exist then the routine returns immediately."
Units=SysUtils
Snip=563.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ExeType]
Kind=routine
DescEx="<p>Checks and returns the type of an executable file.</p><p><var>etUnknown</var> is returned if the file is not executable or if its type can't be determined.</p>"
Extra="<p>This function returns a value from the <var>TExeType</var> enumeration.</p>"
Units=SysUtils,Classes,Windows
Depends=TExeType
Snip=245.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[FileInProgramDir]
DescEx="<p>Returns the fully specified name of the file <var>FileName</var> in the the same directory as the executing program.</p><p>Any path information is stripped from <var>FileName</var>.</p>"
Units=SysUtils
Depends=ProgramPath
Snip=564.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetParentDirectory]
Desc="Returns the parent directory of the provided path."
Extra="<p>Modification of code from Bill Miller's snippets collection.</p> <p>If <var>APath</var> is relative then the returned directory is relative to the current directory.</p>"
Units=SysUtils
Depends=DirToPath
Snip=353.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsDirectory]
DescEx="Returns True if given name is a valid directory and False otherwise. <var>DirName</var> can be any file system name (with or without trailing path delimiter)."
Extra="<p>This routine avoids using <var>DirectoryExists</var> in <mono>FileCtrl</mono> and hence avoids the overhead of using that unit.</p>"
Units=SysUtils
Depends=IsFlagSet
SeeAlso=IsArchiveFile,IsFile,IsHiddenFile,IsReadOnlyFile,IsSystemFile
Snip=007.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsFolderEmpty]
Desc="Determines if a folder is empty. Returns True if so, False otherwise."
Extra="<p>Contributed by Bill Miller, with added error handling.</p> <p><var>AFolder</var> must be a valid directory. It can optionally have a trailing path delimiter.</p>"
Units=SysUtils,Windows
Depends=DirToPath,IsDirectory,PathToDir
SeeAlso=
Snip=272.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[IsHugeFile]
Desc="Checks if a file is huge, i.e. it is larger than 2Gb."
Extra="<p>Use this function to determine if you can rely upon the <var>SizeOfFile</var> function to test the size of a file or if <var>SizeOfFile64</var> must be used. <var>SizeOfFile</var> can only be used if <var>IsHugeFile</var> returns false.</p>"
Depends=SizeOfFile64
SeeAlso=SizeOfFile,SizeOfFile64
Snip=259.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsReservedDeviceName]
Desc="Checks if a name is a Windows reserved device name."
Extra="<p>List of reserved names taken from the <a href="http://msdn.microsoft.com/en-us/library/aa365247.aspx">File Names, Paths and Namespaces</a> topic on the Microsoft Developer Network.</p> <p><strong>Note:</strong> Microsoft state that you should not use any of these reserved names as the name of a file. They also observe that reserved device names followed by an extension should be avoided, for example <mono>NUL.txt</mono>. To check for this use <var>IsReservedDeviceName(RemoveFileExt(ExtractFileName(FileName)));</var>.</p>"
Units=SysUtils
Snip=261.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ShortToLongFilePath]
Desc="Converts whole of given DOS style 8.3 path to long file path and returns it. If path can't be converted then '' is returned."
Extra="<p>Function can handle UNC paths (<mono>\\server\share\path</mono> format) or local paths (<mono>X:\path format</mono>).</p>"
Units=SysUtils
SeeAlso=LongToShortFilePath
Snip=012.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SizeOfFile]
Desc="Gets the size of a file. Returns $FFFFFFFF if the file doesn't exist or can't be accessed or 2^31 if file is larger than 2Gb."
Extra="<p>For files larger than 2Gb use <var>SizeOfFile64</var>.</p>"
Units=SysUtils,Windows
SeeAlso=SizeOfFile64,SizeOfFile2
Snip=258.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SizeOfFile2]
Desc="Gets the size of a file. Returns 0 if the file doesn't exist or can't be accessed."
Extra="<p>The file must be less that 2Gb in size. For files larger than 2Gb use <var>SizeOfFile64</var>.</p><p>Contributed by Montor.</p>"
Units=SysUtils
SeeAlso=SizeOfFile,SizeOfFile64
Snip=294.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SubDirectoryCount]
DescEx="Counts all the sub-directories of directory specified by <var>Path</var>. If <var>Recurse</var> is True all sub-directories are counted recursively, otherwise only immediate sub-directories are counted."
Extra="<p>Adapted from code contributed by Bill Miller.</p>"
Units=IOUtils,Types
Snip=409.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=N
Delphi7=N
Delphi2005Win32=N
Delphi2006Win32=N
Delphi2007=N
Delphi2009Win32=N
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[TempFileName]
DescEx="Returns a unique temporary file name in the user's <mono>Temp</mono> folder. The file name includes the first three characters of <var>Stub</var> followed by hexadecimal characters. If <var>Create</var> is True then the file is created. Returns an empty string on failure."
Extra="<p><strong>Note:</strong> Even if <var>ACreate</var> is false the file will be created momentarily. This means that <var>APath</var> must exist and the current user must have write access to the path or the routine will fail.</p>"
Units=Windows,SysUtils
SeeAlso=TempFolder,TempFileNameEx
Snip=044.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TempFileNameEx]
DescEx="Returns a unique temporary file name in the directory specified in <var>APath</var>. The file name includes the first three characters of <var>AStub</var> followed by hexadecimal characters. If <var>ACreate</var> is True then the file is created. Returns an empty string on failure."
Extra="<p><strong>Note:</strong> Even if <var>ACreate</var> is false the file will be created momentarily. This means that <var>APath</var> must exist and the current user must have write access to the path or the routine will fail.</p><p>From Bill Miller's snippets collection.</p>"
Units=Windows,SysUtils
SeeAlso=TempFileName
Snip=471.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TExeType]
Kind=type
Desc="Enumeration that describes various types of executable file."
Extra="<p><var>TExeType</var> is the return type of the <var>ExeType</var> function.</p>"
SeeAlso=ExeType
Snip=244.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
