[AllDigitsDifferent]
Desc="Checks if all the digits of the given integer are different to each other."
Comments="An example of an integer with all digits different is 15862."
SeeAlso=AllDigitsSame
Snip=498.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[AllDigitsSame]
Desc="Checks if all the digits of the given integer are the same."
Comments="An example of an integer with all digits the same is 777777."
SeeAlso=AllDigitsDifferent,RepeatedDigits
Snip=499.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DigitCount]
Desc="Counts the number of digits in the given integer."
Credits="Contributed by Bill Miller."
SeeAlso=DigitCount2,DigitCountR
TestInfo=advanced
Snip=202.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DigitCount2]
Desc="Counts the number of digits in the given integer."
Credits="Based on code suggested by Don Rowlett."
Units=Math
SeeAlso=DigitCount,DigitCountR
TestInfo=advanced
Snip=204.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DigitCountR]
Desc="Counts the number of digits in the given integer using recursion."
Credits="Contributed by Rubem Nascimento da Rocha."
SeeAlso=DigitCount,DigitCount2
TestInfo=advanced
Snip=417.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[Factorial]
Desc="Calculates the factorial of the given number."
Credits="Adapted from code contributed by Don Rowlett."
Snip=231.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsRectNormal]
Desc="Checks if the given rectangle is normalized, i.e. Left <= Right and Top <= Bottom."
DescEx="<p>Checks if the given rectangle is normalized, i.e. <var>Left</var> &lt;= <var>Right</var> and <var>Top</var> &lt;= <var>Bottom</var>.</p>"
Units=Windows
SeeAlso=NormalizeRect
Snip=124.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[MoveRectToOrigin]
Desc="Translates the give rectangle to the origin. The top and left co-ordinates are set to zero and the bottom and right co-ordinates are adjusted accordingly."
DescEx="<p>Translates the give rectangle to the origin.</p><p>The top and left co-ordinates are set to zero and the bottom and right co-ordinates are adjusted accordingly.</p>"
Units=Types
Snip=373.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Q
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[NormalizeRect]
Desc="Normalises the given rectangle so that Left <= Right and Top <= Bottom."
DescEx="Normalises the given rectangle so that <var>Left</var> &lt;= <var>Right</var> and <var>Top</var> &lt;= <var>Bottom</var>."
Credits="Inspired by code published by Marco Cantu in supplementary chapter 22 of Mastering Delphi 5."
Units=Windows
Depends=ExchangeInt
SeeAlso=IsRectNormal
Snip=125.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[RectArea]
Desc="Returns the area of the given rectangle."
Commants="Adopts the convention that the rectangle's bottom and right are not included in it, so that width = right - left and height = bottom - top."
SeeAlso=RectHeight,RectSize,RectWidth
Units=Windows
Snip=496.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y


[RectHeight]
Desc="Returns the height of the given rectangle. The return value is always non-negative even if the rectangle is not normalized."
DescEx="<p>Returns the height of the given rectangle.</p><p>The return value is always non-negative even if the rectangle is not normalized.</p>"
Comments="Adopts the convention that the rectangle's bottom and right are not included in it, so that height = bottom - top."
Units=Windows
SeeAlso=RectSize,RectWidth,NormalizeRect
Snip=127.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[RectSize]
Desc="Returns the size of the given rectangle. The returned dimensions are always non-negative even if the rectangle is not normalized."
DescEx="<p>Returns the size of the given rectangle.</p><p>The returned dimensions are always non-negative even if the rectangle is not normalized.</p>"
Comments="Adopts the convention that the rectangle's bottom and right are not included in it, so that width = right - left and height = bottom - top."
Units=Windows
Depends=RectWidth,RectHeight
SeeAlso=RectWidth,RectHeight,NormalizeRect
Snip=128.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[RectWidth]
Desc="Returns the width of the given rectangle. The return value is always non-negative even if the rectangle is not normalized."
DescEx="<p>Returns the width of the given rectangle.</p><p>The return value is always non-negative even if the rectangle is not normalized.</p>"
Comments="Adopts the convention that the rectangle's bottom and right are not included in it, so that width = right - left."
Units=Windows
SeeAlso=RectSize,RectHeight,NormalizeRect
Snip=126.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[RepeatedDigits]
Desc="Checks if the given integer contains only a single repeated digit."
Comments="An example of an integer with a single repeated digit is 5555."
Credits="Slightly modified from code contributed by Rubem Rocha."
Units=SysUtils,Math
SeeAlso=AllDigitsSame
Snip=497.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ReverseNumber]
Desc="Reverses the digits of the given integer and returns the resulting value. The given integer should be positive: zero is always returned for negative integers."
DescEx="<p>Reverses the digits of integer <var>AValue</var> and returns the resulting value.</p><p><var>AValue</var> should be positive: zero is always returned for negative integers.</p>"
Credits="Contributed by Rubem Nascimento da Rocha."
SeeAlso=ReverseNumberR
Snip=405.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SignOfFloat]
Desc="Returns the sign of the given floating point value. Returns -1 if the value is positive, 0 if zero or +1 if negative."
Credits="Contributed by Bill Miller."
SeeAlso=SignOfInt
Snip=205.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SignOfInt]
Desc="Returns the sign of the given integer. Returns -1 if the integer is positive, 0 if zero or +1 if negative."
Credits="Contributed by Bill Miller."
SeeAlso=SignOfFloat
Snip=206.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
