[EmptyRecycleBin]
Desc="Empties the recycle bin. Returns True if the bin was emptied or False if the bin was already empty or if there was an error."
DescEx="<p>Empties the recycle bin.</p><p>Returns True if the bin was emptied or False if the bin was already empty or if there was an error.</p>"
Extra="<p>Requires Windows 98 or later. The function fails gracefully if the required shell API function is not available.</p><p>If using Delphi 4 and earlier substitute <var>Windows.LoadLibrary</var> for the call to <var>SysUtils.SafeLoadLibrary</var>.</p>"
Units=Windows,SysUtils
SeeAlso=DeleteFileWithUndo,DeleteFilesWithUndo,RecycleBinInfo
Snip=047.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsIEInstalled]
Desc="Checks if Internet Explorer is installed on the system."
Extra="Contributed by Michael Rockett and renamed."
Depends=ProgIDInstalled
Snip=566.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsSpecialFolderSupported]
Desc="Checks if the special folder specified by CSIDL is supported on the host operating system."
DescEx="Checks if the special folder specified by <var>CSIDL</var> is supported on the host operating system."
Extra="<p>The <var>CSIDL_*</var> constants can be found in the <mono>ShlObj</mono> and (in later version of Delphi) <mono>ShFolder</mono> units.</p>"
Units=ShlObj,Windows
Depends=FreePIDL
SeeAlso=SpecialFolderPath
Snip=055.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[RecycleBinInfo]
Desc="Gets the size of data and number of files in the recycle bin. Pass 'a'..'z' in the Drive parameter to get information about a specific drive or pass #0 to get information about all drives. BinSize receives the size of files in the bin and FileCount receives the number of files. Returns True on success or False if the recycle bin can't be accessed."
DescEx="<p>Gets the size of data and number of files in the recycle bin.</p><p>Pass '<mono>a</mono>'..'<mono>z</mono>' in the <var>Drive</var> parameter to get information about a specific drive or pass <mono>#0</mono> to get information about all drives.</p><p><var>BinSize</var> receives the size of files in the bin and <var>FileCount</var> receives the number of files.</p><p>Returns True on success or False if the recycle bin can't be accessed.</p>"
Extra="<p>Requires Windows 98 or later. The function fails gracefully if the required shell API function is not available.</p><p>If using Delphi 4 substitute <var>Windows.LoadLibrary</var> for the call to <var>SysUtils.SafeLoadLibrary</var>.</p>"
Units=Windows,SysUtils
SeeAlso=EmptyRecycleBin
Snip=142.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SpecialFolderPath]
Desc="Returns the full path of the special file system folder identified by CSIDL. The empty string is returned if the special folder is virtual or if CSIDL is not supported on the host operating system."
DescEx="<p>Returns the full path of the special file system folder identified by <var>CSIDL</var>.</p><p>The empty string is returned if the special folder is virtual or if <var>CSIDL</var> is not supported on the host operating system.</p>"
Extra="<p>The <var>CSIDL_*</var> constants can be found in the <mono>ShlObj</mono> and (in later version of Delphi) <mono>ShFolder</mono> units.</p>"
Units=ShlObj,Windows
Depends=PIDLToFolderPath,FreePIDL
SeeAlso=IsSpecialFolderSupported,CommonFilesFolder,ProgramFilesFolder,SystemFolder,TempFolder,WindowsFolder
Snip=054.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[SysImageListHandle]
Desc="Returns a handle to the system image list for path Path. WantLargeIcons determines if the image list is to contain large or small icons."
DescEx="<p>Returns a handle to the system image list for path <var>Path</var>.</p><p><var>WantLargeIcons</var> determines if the image list is to contain large or small icons.</p>"
Extra="<p>If you assign the handle returned by <var>SysImageListHandle</var> to a <var>TImageList</var>, remember to set the <var>TImageList.ShareImages</var> property to <var>True</var>.</p>"
Units=ShellAPI,Windows
Snip=139.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SysImageListHandleEx]
Desc="Returns a handle to the system image list. Flag specifies the size of the required images using one of the SHIL_* constants. Zero is returned if the handle can't be obtained."
DescEx="<p>Returns a handle to the system image list.</p><p><var>Flag</var> specifies the size of the required images using one of the <var>SHIL_*</var> constants.</p><p>Zero is returned if the handle can't be obtained.</p>"
Extra="<p>Constants for values that may be passed to <var>SysImageListHandle</var> via the <var>Flag</var> parameter are provided in the <var>SHIL_Enum</var> snippet.</p> <p>For information on why the <var>SHGetImageList</var> API routine is loaded by ordinal rather than name see Microsoft Knowledge Base article <a href="http://support.microsoft.com/kb/316931">KB316931</a>.</p><p>Contributed by Bill Miller</p>"
Units=SysUtils,ShellAPI,Windows,CommCtrl
SeeAlso=SHIL_Enum
Snip=333.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[TaskAllocWideString]
Desc="Copies the given string to a wide string buffer allocated by the shell's task allocator and returns a pointer to the buffer."
Extra="<p>The buffer returned by the function must be freed using the task allocator, for example with <var>IMalloc.Free</var>.</p>"
Units=Windows,ActiveX
Snip=061.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
