[AddToRecentDocs]
Desc="Adds the given file to the Recent Documents folder."
Units=ShlObj
SeeAlso=ClearRecentDocs
Snip=013.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[ClearRecentDocs]
Desc="Clears the Recent Documents folder."
Units=ShlObj
SeeAlso=AddToRecentDocs
Snip=014.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[CreateShellLink]
Desc="Creates a shell link named LinkFileName that is a shortcut to file AssocFileName with descriprion Desc.The program executed by the shortcut has working directory WorkDir and is passed command line Args. If IconFileName is not empty then the shortcut's icon is extracted from file IconFileName at index IconIdx. Returns True on success or False on error."
DescEx="<p>Creates a shell link named <var>LinkFileName</var> that is a shortcut to file <var>AssocFileName</var> with descriprion <var>Desc</var>.</p><p>The program executed by the shortcut has working directory <var>WorkDir</var> and is passed command line <var>Args</var>.</p><p>If <var>IconFileName</var> is not empty then the shortcut's icon is extracted from file <var>IconFileName</var> at index <var>IconIdx</var>.</p><p>Returns True on success or False on error.</p>"
Credits="Derived from sample C code in the Windows SDK."
Units=ShlObj,ActiveX
SeeAlso=LoadShellLink,IsShellLink,FileFromShellLink
Snip=015.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ExecAndWait]
Desc="Executes the given command line and waits for the associated program to exit. Returns True if the program returns a zero exit code or False if the program returns a non-zero error code or fails to start."
DescEx="<p>Executes the given command line and waits for the associated program to exit.</p><p>Returns True if the program returns a zero exit code or False if the program returns a non-zero error code or fails to start.</p>"
Units=Windows
SeeAlso=ExecAssociatedApp
Snip=016.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ExecAssociatedApp]
Desc="Executes the application associated with the given file name. Returns True if the application is started successfully or False if not."
DescEx="<p>Executes the application associated with the given file name.</p><p>Returns True if the application is started successfully or False if not.</p>"
Units=ShellAPI,Windows
SeeAlso=ExecAndWait,FindAssociatedApp
Snip=018.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ExploreFile]
Desc="Opens Windows Explorer with the given file name selected. Returns True if the file exists and Explorer can be started or False otherwise."
DescEx="<p>Opens Windows Explorer with the given file name selected.</p><p>Returns True if the file exists and Explorer can be started or False otherwise.</p>"
Credits="Contributed by Bill Miller."
Units=ShellAPI,Windows,SysUtils
SeeAlso=ExploreFolder
Snip=089.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ExploreFolder]
Desc="Opens Windows Explorer with the contents of the given folder displayed. Returns True if the folder exists and Explorer can be started or False otherwise."
DescEx="<p>Opens Windows Explorer with the contents of the given folder displayed</p><p>Returns True if the folder exists and Explorer can be started or False otherwise.</p>"
Units=ShellAPI,Windows,SysUtils
SeeAlso=ExploreFile,OpenFolder
Snip=017.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[FileFromShellLink]
Desc="Returns the fully specified name of the file associated with shell link (shortcut) file LinkFileName. Returns the empty string if LinkFileName is not a shell link or if it is not a shortcut to a physical file."
DescEx="<p>Returns the fully specified name of the file associated with shell link (shortcut) file <var>LinkFileName</var>.</p><p>Returns the empty string if <var>LinkFileName</var> is not a shell link or if it is not a shortcut to a physical file.</p>"
Units=Windows,ActiveX,ShlObj
Depends=LoadShellLink
SeeAlso=CreateShellLink,IsShellLink,LoadShellLink
Snip=088.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[FindAssociatedApp]
Desc="Returns the fully specified path of the program associated with the document file named by Doc. Returns the empty string if no associated application can be found."
DescEx="<p>Returns the fully specified path of the program associated with the document file named by <var>Doc</var>.</p><p>Returns the empty string if no associated application can be found.</p>"
Units=ShellAPI,Windows
SeeAlso=ExecAssociatedApp
Snip=019.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[FreePIDL]
Desc="Frees the memory used by the item ID list pointed to by PIDL. The memory is freed using the shell allocator."
DescEx="Frees the memory used by the item ID list pointed to by <var>PIDL</var>. The memory is freed using the shell allocator."
Units=ActiveX,Windows,ShlObj
Snip=052.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[GetDesktopFolder]
Desc="Returns the path to the current user's desktop."
Credits="Modified from code in Bill Miller's snippets collection."
SeeAlso=SpecialFolderPath,CommonFilesFolder,ProgramFilesFolder,SystemFolder,TempFolder,WindowsFolder
Depends=IsSpecialFolderSupported,SpecialFolderPath
Units=SysUtils,ShlObj
Snip=501.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[GetFileType]
Desc="Returns a description of the file type of FilePath, which must be a file or folder. If FilePath does not exist then the empty string is returned."
DescEx="<p>Returns a description of the file type of <var>FilePath</var>, which must be a file or folder.</p><p>If <var>FilePath</var> does not exist then the empty string is returned.</p>"
Credits="Contributed by Bill Miller."
Units=ShellAPI
SeeAlso=GetGenericFileType
Snip=186.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetGenericFileType]
Desc="Returns a description of the file type of FileNameOrExt which is interpreted either as a file name or, if it has a leading dot, as an extension. If FileNameOrExt is a file name with no extension then 'File' is returned."
DescEx="<p>Returns a description of the file type of <var>FileNameOrExt</var> which is interpreted either as a file name or, if it has a leading dot, as an extension.</p><p>If <var>FileNameOrExt</var> is a file name with no extension then &quot;File&quot; is returned.</p>"
Credits="Contributed by Bill Miller."
Units=Windows,ShellAPI
SeeAlso=GetFileType
Snip=185.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetKnownFolderPath]
Desc="Returns the 'known folder path' specified by FolderID or the empty string if FolderID is not valid on the host operating system."
DescEx="Returns the &quot;known folder path&quot; specified by <var>FolderID</var>, or the empty string if <var>FolderID</var> is not valid on the host operating system."
Credits="Contributed by Ariel Rivas."
Comments="This routine requires Windows Vista or later."
Units=ShlObj,ActiveX
SeeAlso=SpecialFolderPath
Snip=502.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=N
Delphi7=N
Delphi2005Win32=N
Delphi2006Win32=N
Delphi2007=N
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[IsShellLink]
Desc="Checks if the given file is a shell link."
Units=ActiveX
Depends=LoadShellLink
SeeAlso=CreateShellLink,FileFromShellLink,LoadShellLink
Snip=087.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[LoadShellLink]
Desc="Creates a shell link object that permits the shell link named by LinkFileName to be interogated and manipulated. Returns the object's IShellLink interface or nil if LinkFileName is not a shell link."
DescEx="<p>Creates a shell link object that permits the shell link named by <var>LinkFileName</var> to be interogated and manipulated.</p><p>Returns the object's <var><a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb774950">IShellLink</a></var> interface or nil if <var>LinkFileName</var> is not a shell link.</p>"
Comments=COM must be initialized before this function is used.
Units=ActiveX,ShlObj
SeeAlso=CreateShellLink,IsShellLink,FileFromShellLink
Snip=086.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[OpenFolder]
Desc="Opens the given folder in Windows Explorer. Returns True if the folder is valid and can be opened, or False otherwise."
DescEx="<p>Opens the given folder in Windows Explorer.</p><p>Returns True if the folder is valid and can be opened, or False otherwise.</p>"
Units=ShellAPI,Windows,SysUtils
SeeAlso=ExploreFolder
Snip=020.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[PIDLToFolderPath]
Desc="Returns the full path of the file system folder identified by PIDL, or returns the empty string if PIDL identifies a virtual folder or is not valid."
DescEx="Returns the full path of the file system folder identified by <var>PIDL</var>, or returns the empty string if <var>PIDL</var> identifies a virtual folder or is not valid."
Units=Windows,ShlObj
SeeAlso=SpecialFolderPath,FreePIDL
Snip=053.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[ShowFindFilesDlg]
Desc="Displays the Windows file search window ready for searching the given folder. Returns True if the search window is shown or False if can't be displayed."
DescEx="<p>Displays the Windows file search window ready for searching the given folder.</p><p>Returns True if the search window is shown or False if can't be displayed.</p>"
Credits="Based on sample code by Allan Carlton."
Comments="The file search window will appear differently on different versions of Windows."
Units=ShellAPI,Windows
SeeAlso=ShowShellPropertiesDlg
Snip=021.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ShowShellPropertiesDlg]
Desc="Shows the Windows shell properties dialogue box for the given file system object. The dialogue box is shown non-modally."
DescEx="<p>Shows the Windows shell properties dialogue box for the given file system object.</p><p>The dialogue box is shown non-modally.</p>"
Comments="The file system object must be a drive, a folder or a file. If the object does not exist Windows will display an error dialogue box."
Credits="Adapted from code contributed by Bill Miller."
Units=ShellAPI
SeeAlso=ShowFindFilesDlg
Snip=179.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[TaskbarBounds]
Desc="Returns the bounding rectangle of the Windows taskbar, or an empty rectangle on error."
Units=Windows,ShellAPI
Depends=TaskbarHandle
SeeAlso=TaskbarHandle
Snip=157.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[TaskbarHandle]
Desc="Returns the window handle of the Windows task bar."
Credits="Based on sample code by Michael Beck in an article formerly on Borland Code Central."
Units=Windows
SeeAlso=TaskbarBounds,TrayHandle
Snip=046.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TrayHandle]
Desc="Returns the window handle of the system tray area of the Windows task bar."
Units=Windows
Depends=TaskbarHandle
SeeAlso=TaskbarHandle
Snip=140.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
