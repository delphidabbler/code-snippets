[PadCenter]
Desc="Centre aligns string AString within a string of size AWidth and returns the result. The string is padded as necessary with character AChar."
DescEx="Centre aligns string <var>AString</var> within a string of size <var>AWidth</var> and returns the result. The string is padded as necessary with character <var>AChar</var>."
Comments="When an odd number of padding characters is required, the extra character is added on the right."
SeeAlso=PadLeft,PadRight
Snip=246.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[PadLeft]
Desc="Left aligns string AString within a string of size AWidth and returns the result. The string is padded on the right as necessary with character AChar."
DescEx="Left aligns string <var>AString</var> within a string of size <var>AWidth</var> and returns the result. The string is padded on the right as necessary with character <var>AChar</var>."
Credits="Contributed by Bill Miller."
SeeAlso=PadCenter,PadRight
Snip=247.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[PadRight]
Desc="Right aligns string AString within a string of size AWidth and returns the result. The string is padded on the left as necessary with character AChar."
DescEx="<p>Right aligns string <var>AString</var> within a string of size <var>AWidth</var> and returns the result. The string is padded on the left as necessary with character <var>AChar</var>.</p>"
Credits="Contributed by Bill Miller."
SeeAlso=PadCenter,PadLeft
Snip=248.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ParseDelims]
Desc="Returns the sub-string of string TextLine that begins at StartPos and is terminated by one of the delimiting characters from Delims or the end of the string. StartPos is updated to the index of the character after the delimiter. Returns the empty string if there is no sub-string following StartPos."
DescEx="<p>Returns the sub-string of string <var>TextLine</var> that begins at <var>StartPos</var> and is terminated by one of the delimiting characters from <var>Delims</var> or the end of the string.</p><p><var>StartPos</var> is updated to the index of the character after the delimiter.</p><p>Returns the empty string if there is no sub-string following <var>StartPos</var>.</p>"
Units=SysUtils
Snip=004.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ReverseStr]
Desc="Returns the reverse of the given string."
Credits="Renamed from a routine contributed by Rubem Nascimento da Rocha."
Units=SysUtils,StrUtils
SeeAlso=ReverseStrR
TestInfo=advanced
Snip=438.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ReverseStrR]
Desc="Returns the reverse of the given string."
Credits="Renamed from a routine contributed by Rubem Nascimento da Rocha."
Comments="Uses recursion."
Units=SysUtils,StrUtils
SeeAlso=ReverseStr
TestInfo=advanced
Snip=439.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SplitStr]
Desc="Splits string S at the first occurence of delimiter string Delim. S1 is set to to the sub-string of S before Delim and S2 to the remainder of S after Delim. If Delim is not found then S1 is set to S and S2 to the empty string. Returns True if S contains Delim or False if not."
DescEx="<p>Splits string <var>S</var> at the first occurence of delimiter string <var>Delim</var>. <var>S1</var> is set to to the sub-string of <var>S</var> before <var>Delim</var> and <var>S2</var> to the remainder of <var>S</var> after <var>Delim</var>.</p><p>If <var>Delim</var> is not found then <var>S1</var> is set to <var>S</var> and <var>S2</var> to the empty string.</p><p>Returns True if <var>S</var> contains <var>Delim</var> or False if not.</p>"
Units=SysUtils
SeeAlso=ExplodeStr,ExplodeStrArray,JoinStr,JoinStrArray
Snip=033.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[StripAccelChars]
Desc="Strips all accelerator ('&') characters from the given string and returns the resulting string."
DescEx="Strips all accelerator ('<mono>&amp;</mono>') characters from the given string and returns the resulting string."
Credits="Renamed from a routine contributed by Rubem Nascimento da Rocha."
Units=SysUtils
TestInfo=advanced
Snip=440.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[StripLastChar]
Desc="Removes the last character from the string S and returns the resulting string. If S is empty then it is returned unchanged."
DescEx="Removes the last character from the string <var>S</var> and returns the resulting string. If <var>S</var> is empty then it is returned unchanged."
Credits="Contributed by Guru Kathiresan."
Comments="NOTE: This routine is not suitable for use with multi-byte character sets."
Extra="<strong>Note:</strong> This routine is not suitable for use with multi-byte character sets."
SeeAlso=LastChar
Snip=382.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[StrToken]
Desc="Finds and returns the first token in string S, delimited by the given separator character. The token and separator are removed from S. If no separators are found then the whole of S is returned and S is then set to the empty string."
DescEx="<p>Finds and returns the first token in string <var>S</var>, delimited by the given separator character. The token and separator are removed from <var>S</var>.</p><p>If no separators are found then the whole of <var>S</var> is returned and <var>S</var> is then set to the empty string.</p>"
Credits="Slightly modified from code contributed by Guru Kathiresan."
Units=SysUtils
SeeAlso=StrTokenCount
Snip=537.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[StrTokenCount]
Desc="Counts and returns the number of tokens in string S delimited by the given separator character. Empty strings before separators are counted as tokens, but an empty string after the last separator is not."
DescEx="<p>Counts and returns the number of tokens in string <var>S</var> delimited by the given separator character.</p><p>Empty strings before separators are counted as tokens, but an empty string after the last separator is not.</p>"
Credits="Contributed by Guru Kathiresan."
SeeAlso=StrToken
Depends=StrToken
Snip=538.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TextWrap]
Desc="Word wraps string Text, using the space character as delimiter, into lines of maximum width Width, with each line left-padded with Margin spaces. The resulting text is returned in a string with lines separated by CRLF."
DescEx="<p>Word wraps string <var>Text</var>, using the <em>space</em> character as delimiter, into lines of maximum width <var>Width</var>, with each line left-padded with <var>Margin</var> spaces.</p><p>The resulting text is returned in a string with lines separated by <mono>CRLF</mono>.</p>"
Units=Classes
Depends=ExplodeStr
Snip=141.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TrimChar]
Desc="Trims occurrences of character C from both ends of string S and returns the result."
DescEx="Trims occurrences of character <var>C</var> from both ends of string <var>S</var> and returns the result."
Comments="The character to be trimmed must be a single byte character."
Depends=TrimLeftChar,TrimRightChar
SeeAlso=TrimLeftChar,TrimRightChar
Snip=195.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TrimLeftChar]
Desc="Trims occurrences of character C from the start of string S and returns the result."
DescEx="Trims occurrences of character <var>C</var> from the start of string <var>S</var> and returns the result."
Comments="The character to be trimmed must be a single byte character."
SeeAlso=TrimChar,TrimRightChar
Snip=196.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TrimRightChar]
Desc="Trims occurrences of character C from the end of string S and returns the result."
DescEx="Trims occurrences of character <var>C</var> from the end of string <var>S</var> and returns the result."
Comments="The character to be trimmed must be a single byte character."
SeeAlso=TrimChar,TrimLeftChar
Snip=197.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TrimStringList]
Desc="Removes lines prefixed by Prefix from string list List, updating it in place. Set Prefix to the empty string to remove empty lines, including those containing only white space."
DescEx="<p>Removes lines prefixed by <var>Prefix</var> from string list <var>List</var>, updating it in place.</p><p>Set <var>Prefix</var> to the empty string to remove empty lines, including those containing only white space.</p>"
Credits="Closely based on a routine contributed by Joe Donth."
Units=SysUtils,Classes
SeeAlso=ExplodeStr,JoinStr
Snip=131.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[UnixLineBreaks]
Desc="Converts all DOS and Mac line endings in the given string to Unix line endings and returns the result."
Comments="Any existing Unix line breaks are preserved."
Units=SysUtils
SeeAlso=DOSLineBreaks
Snip=191.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
