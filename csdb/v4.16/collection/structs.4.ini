;#if-ver-gt 4.4.1
[TRangeEx]
Kind=class
Desc="Encapsulates a range of integers with a methods to test whether a value falls within the range and to adjust the value to fit."
Units=Math
SeeAlso=Range,TRange
Snip=578.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=N
Delphi7=N
Delphi2005Win32=N
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
;#end-if

[TSizeEx]
Kind=class
Desc="Record that represents the size, i.e. the width and height, of something. This is an extended version of the TSize record that features equality and inequality operator overloading, a test for zero size and a constructor. TSizeEx is assignment compatible and comparible with the Delphi RTL's TSize record."
DescEx="<p>Record that represents the size, i.e. the width and height, of something.</p><p>This is an extended version of the <var>TSize</var> record that features equality and inequality operator overloading, a test for zero size and a constructor.</p><p><var>TSizeEx</var> is assignment compatible and comparible with the Delphi RTL's <var>TSize</var> record.</p>"
Units=Types
SeeAlso=Size
Snip=510.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=N
Delphi6=N
Delphi7=N
Delphi2005Win32=N
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
