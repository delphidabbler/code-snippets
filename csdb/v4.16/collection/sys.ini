[DebuggerPresent]
Desc="Indicates whether the calling process is running within a debugger."
Credits="Contributed by DennisLV."
Units=Windows
Snip=136.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[Delay]
Desc="Delays processing for the given number of milliseconds without processing any messages."
Credits="Modified in line with Pause routine per suggestions by Montor."
Comments="This routine is aimed at console applications and threads that have no message queue. Normal GUI applications should not use this routine."
Units=Windows
SeeAlso=Pause
Snip=265.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[EmptyKeyQueue]
Desc="Empties all keyboard messages from the message queue of any window belonging to the current thread."
Credits="Contributed by DennisLV."
Units=Windows,Messages
SeeAlso=SendKeysToWindow
Snip=120.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetBiosVendor]
Desc="Returns the name of the computer's BIOS vendor."
Credits="Contributed by Bill Miller."
Units=Windows,Registry
SeeAlso=GetProcessorIdentifier,GetProcessorName,GetSystemManufacturer,GetSystemProductName
Snip=511.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetCharFromVirtualKey]
Desc="Translates virtual key code AKey into one or more characters which are returned as a string. An empty string is returned if AKey can't be translated."
DescEx="<p>Translates virtual key code <var>AKey</var> into one or more characters which are returned as a string.</p><p>An empty string is returned if <var>AKey</var> can't be translated.</p>"
Credits="Adapted from code contributed by Bill Miller."
Units=Windows
Snip=203.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetParentProcessID]
Desc="Returns the ID of the process that is the parent of the process identified by PID."
DescEx="Returns the ID of the process that is the parent of the process identified by <var>PID</var>."
Units=Windows,TlHelp32
SeeAlso=GetWindowProcessID
Snip=240.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[GetProcessName]
Desc="Returns the name of the executable file associated with the process identified by PID, or the empty string on error."
DescEx="<p>Returns the name of the executable file associated with the process identified by <var>PID</var>, or the empty string on error.</p>"
Units=Windows,TlHelp32
SeeAlso=GetWindowProcessID,GetWindowProcessName
Snip=159.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[GetProcessorIdentifier]
Desc="Returns the identifier of the computer's processor."
Credits="Contributed by Bill Miller."
Units=Windows,Registry
SeeAlso=GetBiosVendor,GetProcessorName,GetSystemManufacturer,GetSystemProductName
Snip=512.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetProcessorName]
Desc="Return the name of the computer's processor."
Credits="Contributed by Bill Miller."
Units=Windows,Registry
SeeAlso=GetBiosVendor,GetProcessorIdentifier,GetSystemManufacturer,GetSystemProductName
Snip=513.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetSystemManufacturer]
Desc="Returns the name of the computer's manufacturer."
Credits="Contributed by Bill Miller."
Units=Windows,Registry
SeeAlso=GetBiosVendor,GetProcessorIdentifier,GetProcessorName,GetSystemProductName
Snip=514.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetSystemProductName]
Desc="Returns the system product name."
Credits="Contributed by Bill Miller."
Units=Windows,Registry
SeeAlso=GetBiosVendor,GetProcessorIdentifier,GetProcessorName,GetSystemManufacturer
Snip=515.dat
Delphi2=N
Delphi3=N
Delphi4=N
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetWindowProcessID]
Desc="Returns the ID of the process that created the window with handle Wnd, or -1 if Wnd is not a valid window handle."
DescEx="<p>Returns the ID of the process that created the window with handle <var>Wnd</var>, or -1 if <var>Wnd</var> is not a valid window handle.</p>"
Units=Windows
SeeAlso=GetProcessName,GetWindowProcessName,GetParentProcessID
Snip=158.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetWindowProcessName]
Desc="Returns the name of the executable file of the process that created the window with handle Wnd, or the empty string on error."
DescEx="<p>Returns the name of the executable file of the process that created the window with handle <var>Wnd</var>, or the empty string on error.</p>"
Units=Windows
Depends=GetProcessName,GetWindowProcessID
SeeAlso=GetProcessName,GetWindowProcessID
Snip=160.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[GetWindowThreadID]
Desc="Returns the identifier of the thread that created the window with handle Wnd, or -1 if Wnd is invalid or if the thread can't be found."
DescEx="Returns the identifier of the thread that created the window with handle <var>Wnd</var>, or -1 if <var>Wnd</var> is invalid or if the thread can't be found."
Units=Windows
SeeAlso=GetWindowProcessID
Snip=241.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HostIPAddress]
Desc="Detects and returns the machine's local IP address, or 0.0.0.0 if the address is not found."
Credits="Contributed by DennisLV."
Units=SysUtils,Windows,WinSock
Snip=108.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsAdmin]
Desc="Checks if the current user has administrator privileges."
Credits="Contributed by Rubem Nascimento da Rocha."
Units=Windows
Snip=404.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsKeyPressed]
Desc="Checks if the key identified by VirtKeyCode is being pressed. VirtKeyCode must be either a virtual key code or an ASCII value."
DescEx="<p>Checks if the key identified by <var>VirtKeyCode</var> is being pressed.</p><p><var>VirtKeyCode</var> must be either a virtual key code or an ASCII value.</p>"
Units=Windows
SeeAlso=IsLockKeyOn
Snip=135.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsLockKeyOn]
Desc="Checks state of the lock key specified by KeyCode. Returns True if the lock key is on or False if it is off. An exception is raised if KeyCode is not a valid lock key code. Valid lock key codes are VK_CAPITAL, VK_NUMLOCK and VK_SCROLL."
DescEx="<p>Checks state of the lock key specified by <var>KeyCode</var>. Returns True if the lock key is on or False if it is off.</p><p>An exception is raised if <var>KeyCode</var> is not a valid lock key code. Valid lock key codes are <var>VK_CAPITAL</var>, <var>VK_NUMLOCK</var> and <var>VK_SCROLL</var>.</p>"
Units=SysUtils,Windows
SeeAlso=SetLockKeyState
Snip=050.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsRunningOnBattery]
Desc="Checks if the computer is running on battery power and returns True if so or False when running on mains or if the power status is unknown."
Credits="Based on code published on the [Delphi FAQ]."
Credits_URL="http://www.delphifaq.com/"
Units=Windows
SeeAlso=RemainingBatteryPercent
Snip=146.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[Pause]
Desc="Pauses for ADelay milliseconds before returning."
DescEx="Pauses for <var>ADelay</var> milliseconds before returning."
Comments="Performs a busy wait."
Credits="Modifications to handle potential clock roll over and sleeping suggested by Montor."
Units=Windows
Depends=ProcessMessages
SeeAlso=Delay
Snip=144.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ProgramFileName]
Desc="Returns the executing program's file name."
Units=SysUtils
Depends=ProgramFileSpec
SeeAlso=ProgramFileSpec,ProgramName,ProgramPath
Snip=105.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ProgramFileSpec]
Desc=Returns the fully specified path and file name of the executing program.
Credits="Based on code suggested by Alan Bailey."
SeeAlso=ProgramFileName,ProgramPath,ProgramName
Snip=104.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ProgramName]
Desc="Returns the name of the executing program (i.e. the program file name minus its extension)."
Depends=ProgramFileName,RemoveFileExt
SeeAlso=ProgramFileSpec,ProgramFileName,ProgramPath
Snip=107.dat
Delphi2=N
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ProgramPath]
Desc="Returns the directory containing the executing program."
Credits="Based on code suggested by Alan Bailey."
Units=SysUtils
Depends=ProgramFileSpec
SeeAlso=ProgramFileSpec,ProgramFileName,ProgramName
Snip=106.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[RemainingBatteryPercent]
Desc="Returns remaining battery life as a percentage (0..100), or -1 if the remaining battery life is unknown."
Credits="Based on code published on the [Delphi FAQ]."
Credits_URL="http://www.delphifaq.com/"
Units=Windows
SeeAlso=IsRunningOnBattery
Snip=145.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SendKeysToWindow]
Desc="Sends key strokes to the window with handle HWnd that correspond to the characters in string Text."
DescEx="Sends key strokes to the window with the handle <var>HWnd</var> that correspond to the characters in string <var>Text</var>."
Credits="Based on code suggested by DennisLV."
Units=Windows,Messages
SeeAlso=EmptyKeyQueue,PostKeyEx32
Snip=121.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SetLockKeyState]
Desc="Sets the state of the lock key with code KeyCode to the value given by IsOn. Passing True to IsOn switches the lock key on and passing False switches it off. An exception is raised if KeyCode is not a valid lock key code. Valid key codes are VK_CAPITAL, VK_NUMLOCK and VK_SCROLL."
DescEx="<p>Sets the state of the lock key with code <var>KeyCode</var> to the value given by <var>IsOn</var>. Passing True to <var>IsOn</var> switches the lock key on and passing False switches it off.</p><p>An exception is raised if <var>KeyCode</var> is not a valid lock key code. Valid key codes are <var>VK_CAPITAL</var>, <var>VK_NUMLOCK</var> and <var>VK_SCROLL</var>.</p>"
Units=SysUtils,Windows
Depends=IsLockKeyOn
SeeAlso=IsLockKeyOn
Snip=051.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
