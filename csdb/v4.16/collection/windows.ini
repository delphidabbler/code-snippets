[ClientRectToScreen]
DescEx="Translates the rectangle <var>CliRect</var>, which has coordinates relative to the client area of control <var>Ctrl</var>, into global screen coordinates and returns the result."
Units=Controls,Windows
SeeAlso=CtrlBoundsToScreen
Snip=262.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[CtrlBoundsToScreen]
DescEx="Returns the bounding rectangle of control <var>Ctrl</var> in terms of global screen co-ordinates."
Units=Classes,Controls,Windows
Depends=ClientRectToScreen
SeeAlso=ClientRectToScreen
Snip=263.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[DisableLayersSupport]
Desc="Disables layers (transparency) support for the window with the given handle."
Units=Windows
SeeAlso=EnableLayersSupport,WindowSupportsLayers
Snip=283.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DisableTreeViewToolTips]
Desc="Disables the tool tips that are displayed in the given treeview control when the mouse is hovered over an item that is cropped because it is too large to display."
Comments="This routine is of use with earlier versions of Delphi in which the tree view component does not have a property to switch tool tips on and off."
Units=Windows,ComCtrls,CommCtrl
Snip=507.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[EnableLayersSupport]
DescEx="<p>Enables layers (transparency) support for the window with the given handle.</p><p>Returns True on success or False on failure.</p>"
Units=Windows
Depends=WindowSupportsLayers
SeeAlso=DisableLayersSupport,WindowSupportsLayers
Snip=284.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetIdleTime]
Desc="Returns the time ellapsed since the last user input."
Credits="Modified from code contributed by Topellina."
Units=Windows
Snip=371.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[GetTopLevelWindow]
DescEx="<p>Returns the handle of the top level window of which <var>Wnd</var> is a child window.</p><p>If <var>Wnd</var> is already a top level window then <var>Wnd</var> itself is returned. The return value is 0 if <var>Wnd</var> is not a valid window.</p>"
Units=Windows
Depends=IsTopLevelWindow
SeeAlso=IsTopLevelWindow
Snip=171.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetWindowTitle]
DescEx="<p>Returns the title of the window with the given handle.</p><p>Titles of more than 255 characters are truncated.</p>"
Credits="Contributed by Guru Kathiresan."
Units=Windows
Snip=500.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HScrollbarHeight]
Desc="Returns the height of the given control's horizontal scrollbar if shown, or 0 if not shown."
Units=Controls,Windows,StdCtrls
Depends=WinControlScrollbars
SeeAlso=VScrollbarWidth,WinControlScrollbars,WindowScrollbars
Snip=215.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[IsEqualResID]
Desc="Checks whether the two given resource ids are equal."
Units=SysUtils,Windows
Depends=IsIntResource
SeeAlso=IsIntResource,ResourceIDToStr
Snip=267.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsTopLevelWindow]
Desc="Checks if the window with the given handle is a top level window."
Units=Windows
SeeAlso=GetTopLevelWindow
Snip=172.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[MemoCursorPos]
DescEx="Returns a <var>TPoint</var> value containing the coordinates of the cursor in the given memo control."
Credits="Based on code contributed by Shlomo Abuisak."
Units=Messages,Windows,StdCtrls
Snip=334.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[ResourceExists]
DescEx="Checks if a resource with name <var>ResName</var> and type <var>ResType</var> exists in the module with handle <var>Module</var>."
Comments="This routine is language agnostic: it takes no account of the language of the required resource."
Units=Windows
SeeAlso=ResourceExistsEx
Snip=198.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ResourceExistsEx]
DescEx="Checks if a resource with name <var>ResName</var>, type <var>ResType</var> and language ID <var>Language</var> exists in the module with handle <var>Module</var>."
Units=Windows
SeeAlso=ResourceExists
Snip=199.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ResourceIDToStr]
DescEx="<p>Converts the given resource identifier to its string representation.</p><p>A string valued resource identifier is returned as-is but an integer valued identifier is returned as a <mono>#</mono> character followed by the integer value as a string.</p>"
Units=SysUtils
Depends=IsIntResource
SeeAlso=IsEqualResID,IsIntResource
Snip=200.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SetTransparencyLevel]
DescEx="Sets the transparency level of the window with handle <var>HWnd</var> to the value given by <var>Level</var>."
Comments="This function requires that the window supports layers. The transparency level is in the range [0..255]."
Units=Windows
Depends=WindowSupportsLayers
SeeAlso=DisableLayersSupport,EnableLayersSupport,WindowSupportsLayers
Snip=285.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TreeNodeChildCount]
Desc="Returns the number of child nodes of the given tree node."
Credits="Derived from code contributed by Bill Miller."
Units=ComCtrls
Snip=508.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[VScrollbarWidth]
Desc="Returns the width of the given control's vertical scrollbar if shown, or 0 if not shown."
Units=Controls,Windows,StdCtrls
Depends=WinControlScrollbars
SeeAlso=HScrollbarHeight,WinControlScrollbars,WindowScrollbars
Snip=216.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[WinControlScrollbars]
DescEx="Returns a value that specifies which, if any, scroll bars are displayed by the given <var>TWinControl</var>."
Units=Controls,StdCtrls
Depends=WindowScrollbars
SeeAlso=HScrollbarHeight,VScrollbarWidth,WindowScrollbars
Snip=214.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[WindowScrollbars]
Desc="Returns a value that specifies which, if any, scroll bars are displayed by the window with the given handle."
Credits="Based on code by Peter Below from the now defunct Delphi Pool website."
Units=Windows,StdCtrls
SeeAlso=HScrollbarHeight,VScrollbarWidth,WinControlScrollbars
Snip=213.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[WindowSupportsLayers]
Desc="Checks if the window with the given handler supports layers (i.e. transparency)."
Units=Windows
Depends=IsFlagSet
SeeAlso=DisableLayersSupport,EnableLayersSupport
Snip=282.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

# from windows.3.ini

[ContainsFocus]
Desc="Returns True if the specified control, or one of its child controls, currently has the input focus."
Extra="<p>Adapted from the article &quot;<a href="https://www.thoughtco.com/how-to-move-and-resize-controls-at-run-time-4092542">Implementing 'Contains Focus' for Delphi's Container Controls: TPanel, TGroupBox</a>&quot; on About.com.</p>"
Depends=FocusedControl
SeeAlso=FocusedControl
Units=Windows,Controls
Snip=618.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[FocusedControl]
DescEx="<p>Returns the name of the <var>TWinControl</var> that currently has the focus, or <strong>nil</strong> if there is no such control.</p>"
SeeAlso=ContainsFocus
Units=Windows,Controls
Snip=619.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[IsIntResource]
DescEx="Checks whether <var>ResID</var> is an integer identifier for a resource."
Extra="<p>Emulates the Windows <var>IS_INTRESOURCE</var> macro.</p>"
SeeAlso=IsEqualResID,ResourceIDToStr
Units=Windows
Snip=049.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[LangIDFromLCID]
Desc="Extracts and returns a language identifier from the given locale identifier."
Extra="<p>Emulates the Windows <var>LANGIDFROMLCID</var> macro.</p>"
Units=Windows
SeeAlso=MakeLCID,SortIDFromLCID
Snip=187.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[MakeLangID]
DescEx="Creates and returns a language identifier from primary language identifier <var>P</var> and sublanguage identifier <var>S</var>."
Extra="<p>Emulates the Windows <var>MAKELANGID</var> macro.</p>"
SeeAlso=MakeLCID,PrimaryLangID,SubLangID
Snip=168.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[MakeLCID]
DescEx="Creates and returns a locale identifier from language identifier <var>LanguageID</var> and sort order identifier <var>SortID</var>."
Extra="<p>Emulates the Windows <var>MAKELCID</var> macro.</p>"
Units=Windows
SeeAlso=MakeLangID,PrimaryLangID,SubLangID
Snip=189.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[PrimaryLangID]
Desc="Extracts and returns a primary language identifier from the given language identifier."
Extra="<p>Emulates the Windows <var>PRIMARYLANGID</var> macro.</p>"
SeeAlso=MakeLangID,MakeLCID,SubLangID
Snip=169.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[REWordAtPos]
DescEx="Returns the word at coordinates (<var>X</var>,<var>Y</var>) in rich edit control <var>RE</var>."
Extra="<p><strong>Note:</strong> This function assumes that words are separated by one or more of the following white space characters: <em>space</em>, <mono>TAB</mono>, <mono>LF</mono>, <mono>VT</mono>, <mono>FF</mono> and <mono>CR</mono>.</p><p>Adapted from code contributed by Arno Wolff.</p>"
Units=SysUtils,Classes,Messages,Windows,ComCtrls,RichEdit
Depends=IsWhiteSpace
Snip=268.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[SortIDFromLCID]
Desc="Extracts and returns a sort order identifier from the given locale identifier."
Extra="<p>Emulates the Windows <var>SORTIDFROMLCID</var> macro.</p>"
Units=Windows
SeeAlso=LangIDFromLCID,MakeLCID
Snip=188.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SubLangID]
Desc="Extracts and returns a sublanguage identifier from the given language identifier."
Extra="<p>Emulates the Windows <var>SUBLANGID</var> macro.</p>"
SeeAlso=MakeLangID,MakeLCID,PrimaryLangID
Snip=170.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
