[ClientRectToScreen]
Desc="Translates the rectangle CliRect, which has coordinates relative to the client area of control Ctrl, into global screen coordinates and returns the result."
DescEx="Translates the rectangle <var>CliRect</var>, which has coordinates relative to the client area of control <var>Ctrl</var>, into global screen coordinates and returns the result."
Units=Controls,Windows
SeeAlso=CtrlBoundsToScreen
Snip=262.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[CtrlBoundsToScreen]
Desc="Returns the bounding rectangle of control Ctrl in terms of global screen co-ordinates."
DescEx="Returns the bounding rectangle of control <var>Ctrl</var> in terms of global screen co-ordinates."
Units=Classes,Controls,Windows
Depends=ClientRectToScreen
SeeAlso=ClientRectToScreen
Snip=263.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[DisableLayersSupport]
Desc="Disables layers (transparency) support for the window with the given handle."
Units=Windows
SeeAlso=EnableLayersSupport,WindowSupportsLayers
Snip=283.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[DisableTreeViewToolTips]
Desc="Disables the tool tips that are displayed in the given treeview control when the mouse is hovered over an item that is cropped because it is too large to display."
Comments="This routine is of use with earlier versions of Delphi in which the tree view component does not have a property to switch tool tips on and off."
Credits="Code taken from an [article] on the About Delphi web site."
Credits_URL="http://delphi.about.com/od/delphitips2007/qt/tvs_notooltips.htm"
Units=Windows,ComCtrls,CommCtrl
Snip=507.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[EnableLayersSupport]
Desc="Enables layers (transparency) support for the window with the given handle. Returns True on success or False on failure."
DescEx="<p>Enables layers (transparency) support for the window with the given handle.</p><p>Returns True on success or False on failure.</p>"
Units=Windows
Depends=WindowSupportsLayers
SeeAlso=DisableLayersSupport,WindowSupportsLayers
Snip=284.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetIdleTime]
Desc="Returns the time ellapsed since the last user input."
Credits="Modified from code contributed by Topellina."
Units=Windows
Snip=371.dat
Delphi2=N
Delphi3=N
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[GetTopLevelWindow]
Desc="Returns the handle of the top level window of which Wnd is a child window. If Wnd is already a top level window then Wnd itself is returned. The return value is 0 if Wnd is not a valid window."
DescEx="<p>Returns the handle of the top level window of which <var>Wnd</var> is a child window.</p><p>If <var>Wnd</var> is already a top level window then <var>Wnd</var> itself is returned. The return value is 0 if <var>Wnd</var> is not a valid window.</p>"
Units=Windows
Depends=IsTopLevelWindow
SeeAlso=IsTopLevelWindow
Snip=171.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[GetWindowTitle]
Desc="Returns the title of the window with the given handle. Titles of more than 255 characters are truncated."
DescEx="<p>Returns the title of the window with the given handle.</p><p>Titles of more than 255 characters are truncated.</p>"
Credits="Contributed by Guru Kathiresan."
Units=Windows
Snip=500.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[HScrollbarHeight]
Desc="Returns the height of the given control's horizontal scrollbar if shown, or 0 if not shown."
Units=Controls,Windows,StdCtrls
Depends=WinControlScrollbars
SeeAlso=VScrollbarWidth,WinControlScrollbars,WindowScrollbars
Snip=215.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[IsEqualResID]
Desc="Checks whether the two given resource ids are equal."
Units=SysUtils,Windows
Depends=IsIntResource
SeeAlso=IsIntResource,ResourceIDToStr
Snip=267.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[IsTopLevelWindow]
Desc="Checks if the window with the given handle is a top level window."
Units=Windows
SeeAlso=GetTopLevelWindow
Snip=172.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[MemoCursorPos]
Desc="Returns a TPoint value containing the coordinates of the cursor in the given memo control."
DescEx="Returns a <var>TPoint</var> value containing the coordinates of the cursor in the given memo control."
Credits="Based on code contributed by Shlomo Abuisak."
Extra="Based on code contributed by Shlomo Abuisak. See also <a href="http://www.delphidabbler.com/tips/125">Tip #125</a> on <a href="http://www.delphidabbler.com/">DelphiDabbler.com</a>."
Units=Messages,Windows,StdCtrls
Snip=334.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[ResourceExists]
Desc="Checks if a resource with name ResName and type ResType exists in the module with handle Module."
DescEx="Checks if a resource with name <var>ResName</var> and type <var>ResType</var> exists in the module with handle <var>Module</var>."
Comments="This routine is language agnostic: it takes no account of the language of the required resource."
Units=Windows
SeeAlso=ResourceExistsEx
Snip=198.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ResourceExistsEx]
Desc="Checks if a resource with name ResName, type ResType and language ID Language exists in the module with handle Module."
DescEx="Checks if a resource with name <var>ResName</var>, type <var>ResType</var> and language ID <var>Language</var> exists in the module with handle <var>Module</var>."
Units=Windows
SeeAlso=ResourceExists
Snip=199.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[ResourceIDToStr]
Desc="Converts the given resource identifier to its string representation. A string valued resource identifier is returned as-is but an integer valued identifier is returned as a '#' character followed by the integer value as a string."
DescEx="<p>Converts the given resource identifier to its string representation.</p><p>A string valued resource identifier is returned as-is but an integer valued identifier is returned as a <mono>#</mono> character followed by the integer value as a string.</p>"
Units=SysUtils
Depends=IsIntResource
SeeAlso=IsEqualResID,IsIntResource
Snip=200.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[SetTransparencyLevel]
Desc="Sets the transparency level of the window with handle HWnd to the value given by Level."
DescEx="Sets the transparency level of the window with handle <var>HWnd</var> to the value given by <var>Level</var>."
Comments="This function requires that the window supports layers. The transparency level is in the range [0..255]."
Units=Windows
Depends=WindowSupportsLayers
SeeAlso=DisableLayersSupport,EnableLayersSupport,WindowSupportsLayers
Snip=285.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y

[TreeNodeChildCount]
Desc="Returns the number of child nodes of the given tree node."
Credits="Derived from code contributed by Bill Miller."
Units=ComCtrls
Snip=508.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[VScrollbarWidth]
Desc="Returns the width of the given control's vertical scrollbar if shown, or 0 if not shown."
Units=Controls,Windows,StdCtrls
Depends=WinControlScrollbars
SeeAlso=HScrollbarHeight,WinControlScrollbars,WindowScrollbars
Snip=216.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[WinControlScrollbars]
Desc="Returns a value that specifies which, if any, scroll bars are displayed by the given TWinControl."
DescEx="Returns a value that specifies which, if any, scroll bars are displayed by the given <var>TWinControl</var>."
Units=Controls,StdCtrls
Depends=WindowScrollbars
SeeAlso=HScrollbarHeight,VScrollbarWidth,WindowScrollbars
Snip=214.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[WindowScrollbars]
Desc="Returns a value that specifies which, if any, scroll bars are displayed by the window with the given handle."
Credits="Based on code by Peter Below from the now defunct Delphi Pool website."
Units=Windows,StdCtrls
SeeAlso=HScrollbarHeight,VScrollbarWidth,WinControlScrollbars
Snip=213.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=N

[WindowSupportsLayers]
Desc="Checks if the window with the given handler supports layers (i.e. transparency)."
Units=Windows
Depends=IsFlagSet
SeeAlso=DisableLayersSupport,EnableLayersSupport
Snip=282.dat
Delphi2=Y
Delphi3=Y
Delphi4=Y
Delphi5=Y
Delphi6=Y
Delphi7=Y
Delphi2005Win32=Y
Delphi2006Win32=Y
Delphi2007=Y
Delphi2009Win32=Y
Delphi2010=Y
DelphiXE=Y
DelphiXE2=Y
DelphiXE3=Y
DelphiXE4=Y
Delphi10S=Y
FPC=Y
